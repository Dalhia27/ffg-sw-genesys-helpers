{"version":3,"sources":["serviceWorker.ts","Components/SanitizedHTML.tsx","Components/ShowAlerts.tsx","Components/TopMenu.tsx","Components/UIPage.tsx","Pages/Home.tsx","Pages/Error404.tsx","Pages/Initiative.tsx","Classes/Alerts.ts","config.ts","Pages/About.tsx","Pages/Settings.tsx","Pages/Temp.tsx","Classes/Dice.ts","Components/Die.tsx","Pages/Dice.tsx","AppRouter.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","sanitizeHtml","require","SanitizedHTML","props","state","this","raw","dangerouslySetInnerHTML","__html","html","allowedTags","allowedAttributes","React","ShowAlerts","updated","alertIndex","appGlobals","siteAlerts","dismissAlert","setState","className","activeAlerts","map","alert","key","id","autoDismissSeconds","level","extraclass","style","display","height","onClick","fontSize","title","icon","faTimesCircle","spin","dismissable","message","messageclass","externalURL","href","link","to","TopMenu","toggleMobile","bind","closeMobile","faBars","current","process","Component","UIPage","showMobile","sub","children","Home","makeDocumentTitle","Error404","Initiative","numPCs","numNPCs","currentInitiative","initMap","lsNumPCs","localStorage","getItem","lsInitMap","lsCurrentInitiative","Number","isNaN","JSON","parse","count","push","label","successes","advantages","triumphs","updateInitSuccesses","updateInitAdvantages","updateInitTriumphs","updateNumPCs","addNPC","addPC","sortInit","initForward","initBackward","removeSlot","init","length","setItem","toString","sort","a","b","stringify","indexNumber","splice","newValue","event","currentTarget","value","npcCount","pcCount","Button","variant","tabIndex","faAngleDoubleLeft","faAngleDoubleRight","mapItem","mapIndex","toLowerCase","onChange","faTrash","Alerts","mainApp","_app","cancelTimeout","clearTimeout","alertID","document","getElementById","paddingTop","paddingBottom","borderTop","borderBottom","setTimeout","dismissFunction","refreshGlobalState","dismissIndex","width","CONFIGSiteTitle","About","Settings","setUITheme","setDieIconClass","settings","uiTheme","saveSettings","dieIconClass","Temp","Dice","numberOfSides","Math","floor","random","_getRandomInt","ability","proficiency","boosts","difficulty","challlenge","setback","force","netSuccesses","netAdvantages","netFailures","netThreats","netTriumphs","netDespairs","grossSuccesses","grossAdvantages","grossFailures","grossThreats","grossTriumphs","grossDespairs","netLightSide","netDarkSide","rolls","dieCount","roll","rollDie","rawRoll","type","numSides","failures","threats","despairs","lightSide","darkSide","grossDarkSide","grossLightSide","total","Die","success","advantage","triumph","failure","threat","despair","dieResult","DicePage","dieRolls","diceObj","abilityDice","proficiencyDice","boostsDice","difficultyDice","challengeDice","setbackDice","forceDice","abilityDiceLS","proficiencyDiceLS","boostsDiceLS","difficultyDiceLS","challengeDiceLS","setbackDiceLS","forceDiceLS","rollDice","rollFGDice","dieType","incrementCount","trim","incrementDie","disabled","faMinus","faPlus","result","resultIndex","AppRouter","openConfirmDialog","closeConfirmDialog","confirmConfirmDialog","lsTheme","body","lsDieIconClass","currentPageTitle","confirmDialogMessage","confirmDialogTitle","confirmDialogYesLabel","confirmDialogNoLabel","showConfirmDialog","confirmDialogConfirm","subTitle","confirmTitle","confirmMessage","confirmYesLabel","confirmNoLabel","confirmCallback","Modal","show","onHide","Header","closeButton","Title","Body","Footer","path","exact","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b7f42b9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\n// import * as sanitizeHtml from 'sanitize-html';\nvar sanitizeHtml = require('sanitize-html');\n\nexport default class SanitizedHTML extends React.Component<ISanitizedHTMLProps, ISanitizedHTMLState> {\n\n    constructor(props: ISanitizedHTMLProps) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    async componentWillMount() {\n\n    }\n\n    // For the SanitizeHTML function/module docs go here:\n    // https://www.npmjs.com/package/sanitize-html\n\n    render() {\n\n        if( this.props.raw ) {\n            return (\n                <span\n                    dangerouslySetInnerHTML={\n                        {\n                            __html: this.props.html\n                        }\n                    }\n                ></span>\n            )\n        } else {\n            return (\n                <span\n                    dangerouslySetInnerHTML={\n                        {\n                            __html: sanitizeHtml(\n                                this.props.html,\n                                {\n                                    allowedTags: [\n                                        \"h1\",\n                                        \"h2\",\n                                        \"h3\",\n                                        \"h4\",\n\n                                        \"svg\",\n\n                                        \"div\",\n                                        \"span\",\n                                        \"p\",\n\n                                        \"ol\",\n                                        \"ul\",\n                                        \"li\",\n\n                                        \"img\",\n\n                                        \"sup\",\n\n                                        \"strong\",\n                                        \"em\",\n\n                                        \"br\",\n                                        \"hr\"\n                                    ],\n                                    allowedAttributes: {\n                                        'div': [ 'class', 'id' ],\n                                        'span': [ 'class', 'id' ],\n                                        'p': [ 'class', 'id' ],\n                                        'img': ['src', 'class', 'id', 'style'],\n                                        'ul': [ 'class', 'id' ],\n                                    },\n                                }\n                            )\n                        }\n                    }\n                />\n            )\n        }\n    }\n}\n\ninterface ISanitizedHTMLProps {\n    html: string;\n    raw?: boolean;\n}\n\ninterface ISanitizedHTMLState {\n\n}","import * as React from 'react';\nimport SanitizedHTML from './SanitizedHTML';\nimport {IAlert} from '../Classes/Alerts';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport {IAppGlobals} from '../AppRouter';\n\nexport default class ShowAlerts extends React.Component<IShowAlertsProps, IShowAlertsState> {\n\n    constructor(props: IShowAlertsProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        };\n    }\n\n    dismissAlert( alertIndex: number) {\n        if( this.props.appGlobals.siteAlerts.dismissAlert( alertIndex ) ) {\n            this.setState({\n                updated: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <ul className=\"styleless\">\n                {this.props.appGlobals.siteAlerts.activeAlerts.map(\n                    (alert: IAlert, alertIndex: number) => {\n                        return <div\n                            key={alertIndex}\n                            id={\"alert-index-\" + alertIndex}\n                            className={alert.autoDismissSeconds > 0 ? \"position-relative alert-fade alert alert-\" + alert.level + \" \" + alert.extraclass : \"position-relative alert alert-\" + alert.level + \" \" + alert.extraclass}\n                            style={{\n                                display: \"block\",\n                                height: \"auto\",\n                            }}\n                        >\n\n                            {alert.autoDismissSeconds > 0 ?\n                            (\n                                <>\n                                <div className=\"alert-countdown\">\n                                    <div\n                                        id={\"alert-bar-index-\" + alertIndex}\n                                        className={\"alert-countdown-bar dismiss-time-\" + alert.autoDismissSeconds}\n                                    >\n\n                                    </div>\n                                </div>\n                                <span\n                                    onClick={() => {this.dismissAlert(alertIndex)} }\n                                    className=\"pull-right cursor-pointer\"\n                                    style={{fontSize: \"1.5rem\"}}\n                                    title={\"Click here to dismiss this alert, but it'll auto-dismiss in \" + alert.autoDismissSeconds + \" seconds\"}\n                                >\n                                    <FontAwesomeIcon icon={faTimesCircle} spin />\n                                </span>\n                                </>\n                            )\n                            :\n                            (\n                                <>\n                                    {alert.dismissable ?\n                                        (\n                                            <span\n                                                onClick={() => {this.dismissAlert(alertIndex)} }\n                                                className=\"pull-right cursor-pointer\"\n                                                style={{fontSize: \"1.5rem\"}}\n                                                title=\"Click here to dismiss this alert\"\n                                            >\n                                                <FontAwesomeIcon icon={faTimesCircle} />\n                                            </span>\n                                        ):\n                                        (\n                                            <></>\n                                        )\n                                    }\n                                </>\n                            )}\n\n                            {alert.title ? (\n                                <h4>{alert.title}</h4>\n                            ):\n                            (\n                                <></>\n                            )\n                            }\n\n                            {alert.message ? (\n                                <div className={alert.messageclass}>\n                                    <SanitizedHTML html={alert.message} />\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                            {alert.externalURL ? (\n                                <div className=\"text-right\">\n                                    <a className=\"btn btn-primary btn-sm\" href={alert.externalURL}>Go</a>\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                            {alert.link ? (\n                                <div className=\"text-right\">\n                                    <Link className=\"btn btn-primary btn-sm\" to={alert.link}>Go</Link>\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                        </div>\n                    }\n                )}\n            </ul>\n\n        )\n    }\n}\n\ninterface IShowAlertsProps {\n    appGlobals: IAppGlobals;\n}\n\ninterface IShowAlertsState {\n    updated: boolean;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './TopMenu.scss';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {IAppGlobals} from '../AppRouter';\n\nexport default class TopMenu extends React.Component<ITopMenuProps, ITopMenuState> {\n    constructor(props: ITopMenuProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n        this.toggleMobile = this.toggleMobile.bind(this);\n        this.closeMobile = this.closeMobile.bind(this);\n    }\n\n    toggleMobile() {\n        this.props.appGlobals.toggleMobile();\n    }\n    closeMobile() {\n        this.props.appGlobals.closeMobile();\n    }\n\n    render() {\n      return (\n          <>\n          <header className=\"topmenu\">\n            <ul>\n                <li onClick={this.toggleMobile} className=\"mobile-menu-button d-inline d-md-none\"><FontAwesomeIcon icon={faBars} /></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"home\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/`}>Home</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"initiative\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/initiative`}>Initiative</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"dice\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dice`}>Dice</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"about\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/about`}>About</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"settings\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/settings`}>Settings</Link></li>\n                {/*\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"dev-status\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dev-status`}>Status</Link></li>\n\n                */}\n\n            </ul>\n\n          </header>\n            <div className=\"mobile-menu\">\n                <ul className=\"styleless\">\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"home\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/`}>Home</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"initiative\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/initiative`}>Initiative</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"dice\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dice`}>Dice</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"about\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/about`}>About</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"settings\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/settings`}>Settings</Link></li>\n                    {/*\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"dev-status\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dev-status`}>Status</Link></li>\n\n                    */}\n                </ul>\n\n            </div>\n          </>\n      );\n    }\n}\n\ninterface ITopMenuProps {\n    current?: string;\n    sub?: string;\n    appGlobals: IAppGlobals;\n}\n\ninterface ITopMenuState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport ShowAlerts from './ShowAlerts';\nimport TopMenu from './TopMenu';\n\nexport default class UIPage extends React.Component<IUIPageProps, IUIPageState> {\n\n    render() {\n        return (\n        <div className={this.props.appGlobals.showMobile ? \"ui-page show-mobile\" : \"ui-page\"}>\n          <TopMenu current={this.props.current} sub={this.props.sub} appGlobals={this.props.appGlobals} />\n          <div className=\"content\">\n            <ShowAlerts appGlobals={this.props.appGlobals} />\n            {this.props.children}\n          </div>\n        </div>\n        )\n    }\n}\n\n\ninterface IUIPageProps {\n    appGlobals: IAppGlobals;\n    current?: string;\n    sub?: string;\n  }\n\n  interface IUIPageState {\n      updated: boolean;\n\n  }","import React from 'react';\nimport './Home.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Home extends React.Component<IHomeProps, IHomeState> {\n    constructor(props: IHomeProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Home\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"home\" appGlobals={this.props.appGlobals}>\n\n            This will be a collection of quick utilities to help Star Wars and Genesys games.\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IHomeProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IHomeState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Error404 extends React.Component<IError404Props, IError404State> {\n    constructor(props: IError404Props) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount () {\n      this.props.appGlobals.makeDocumentTitle(\"404 - Page not Found\");\n    }\n\n    render() {\n      return (\n        <UIPage appGlobals={this.props.appGlobals}>\n            404 - Not Found\n        </UIPage>\n      );\n    }\n}\n\ninterface IError404Props {\n  appGlobals: IAppGlobals;\n}\n\ninterface IError404State {\n    updated: boolean;\n\n}\n","import React from 'react';\nimport './Initiative.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faAngleDoubleLeft, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Initiative extends React.Component<IInitiativeProps, IInitiativeState> {\n    numPCs = 4;\n    numNPCs = 2;\n\n    currentInitiative = -1;\n\n    initMap: IInitMapItem[] = [];\n    constructor(props: IInitiativeProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n\n        const lsNumPCs = localStorage.getItem(\"numPCs\");\n        const lsInitMap = localStorage.getItem(\"initMap\");\n        const lsCurrentInitiative = localStorage.getItem(\"currentInitiative\");\n\n        if( lsCurrentInitiative ) {\n          this.currentInitiative = +lsCurrentInitiative;\n\n          if( Number.isNaN(this.currentInitiative) ) {\n            this.currentInitiative = -1;\n          }\n        }\n\n        if( lsNumPCs ) {\n          this.numPCs = +lsNumPCs;\n        }\n\n\n        if( lsInitMap ) {\n          this.initMap = JSON.parse( lsInitMap );\n        } else {\n          // Init PC Map\n          for( let count = 0; count < this.numPCs; count++) {\n            this.initMap.push( {\n              label: \"PC\",\n              successes: 0,\n              advantages: 0,\n              triumphs: 0,\n            });\n          }\n        }\n\n        this.updateInitSuccesses = this.updateInitSuccesses.bind(this);\n        this.updateInitAdvantages = this.updateInitAdvantages.bind(this);\n        this.updateInitTriumphs = this.updateInitTriumphs.bind(this);\n        this.updateNumPCs = this.updateNumPCs.bind(this);\n        this.addNPC = this.addNPC.bind(this);\n        this.addPC = this.addPC.bind(this);\n        this.sortInit = this.sortInit.bind(this);\n\n        this.initForward = this.initForward.bind(this);\n        this.initBackward = this.initBackward.bind(this);\n\n        this.removeSlot = this.removeSlot.bind(this);\n    }\n\n    initForward() {\n      let init = this.currentInitiative + 1;\n      if( init > this.initMap.length - 1 ) {\n        init = 0;\n      }\n\n      this.currentInitiative = init;\n      localStorage.setItem(\"currentInitiative\", init.toString() );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    initBackward() {\n      let init = this.currentInitiative - 1;\n      if( init < 0 ) {\n        init = this.initMap.length;\n      }\n\n      this.currentInitiative = init;\n      localStorage.setItem(\"currentInitiative\", init.toString() );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    sortInit() {\n      this.initMap.sort( (a, b) => {\n        if( a.successes < b.successes ) {\n          return 1;\n        } else if( a.successes > b.successes ) {\n          return -1;\n        } else {\n          if( a.advantages < b.advantages ) {\n            return 1;\n          } else if( a.advantages > b.advantages ) {\n            return -1;\n          } else {\n            if( a.label === \"PC\" && b.label === \"NPC\" ) {\n              return -1;\n            } else if( a.label === \"NPC\" && b.label === \"PC\" ) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }\n        }\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    addNPC() {\n      this.initMap.push( {\n        label: \"NPC\",\n        successes: 0,\n        advantages: 0,\n        triumphs: 0,\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    addPC() {\n      this.initMap.push( {\n        label: \"PC\",\n        successes: 0,\n        advantages: 0,\n        triumphs: 0,\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    removeSlot( indexNumber: number ) {\n\n      if( this.initMap.length > indexNumber) {\n        this.initMap.splice( indexNumber, 1);\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitAdvantages(\n      indexNumber: number,\n      newValue: number\n    ) {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].advantages = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitTriumphs(\n      indexNumber: number,\n      newValue: number\n    ) {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].triumphs = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitSuccesses(\n      indexNumber: number,\n      newValue: number\n    ) {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].successes = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateNumPCs( event: React.FormEvent<HTMLSelectElement>) {\n\n      this.numPCs = +event.currentTarget.value;\n      localStorage.setItem(\"numPCs\", event.currentTarget.value);\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Initiative\");\n    }\n\n    render() {\n      let npcCount = 0;\n      let pcCount = 0;\n      return (\n        <UIPage current=\"initiative\" appGlobals={this.props.appGlobals}>\n            <div className=\"text-center control-bar\">\n              <div className=\"text-left\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.initBackward}\n                  tabIndex={0}\n                  title=\"Move to the last initiative\"\n                >\n                  <FontAwesomeIcon icon={faAngleDoubleLeft} />\n                </Button>\n              </div>\n              <div className=\"\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.addPC}\n                  tabIndex={1}\n                  title=\"Add a PC\"\n                >\n                  Add PC\n                </Button>\n              </div>\n\n              <div className=\"\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.addNPC}\n                  tabIndex={3}\n                  title=\"Add an NPC\"\n                >\n                  Add NPC\n                </Button>\n              </div>\n\n              <div className=\"grow text-right\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.initForward}\n                  tabIndex={4}\n                  title=\"Move to the next initiative\"\n                >\n                  Next Turn\n                  &nbsp;<FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\n                  {/* Next Turn */}\n                </Button>\n              </div>\n            </div>\n\n          {this.initMap.map( (mapItem, mapIndex ) => {\n            if( mapItem.label.toLowerCase() === \"npc\" ) {\n              npcCount++;\n            } else {\n              pcCount++;\n            }\n            return (\n              <div className={mapIndex === this.currentInitiative ? \"init-map-item current\" : \"init-map-item\"} key={mapIndex}>\n                <div className={mapItem.label.toLowerCase() === \"pc\" ? \"label pc\" : \"label npc\"}>\n                  {mapItem.label}\n                </div>\n                <div className=\"successes\">\n                <label>\n\n                    {/* <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={mapItem.successes}\n                      size={3}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLInputElement>) => this.updateInitSuccesses( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                      title={mapItem.label.toLowerCase() === \"npc\" ? \"NPC #\" + npcCount + \" successes\" : \"PC #\" + pcCount + \" successes\" }\n                    /> */}\n                    <select\n                      value={mapItem.successes}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLSelectElement>) => this.updateInitSuccesses( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                      title={mapItem.label.toLowerCase() === \"npc\" ? \"NPC #\" + npcCount + \" successes\" : \"PC #\" + pcCount + \" successes\" }\n                    >\n                      <option value={0}>0</option>\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                      <option value={7}>7</option>\n                      <option value={8}>8</option>\n                    </select>\n                    <span>Successes</span>\n                  </label>\n                </div>\n                <div className=\"advantages\">\n                  <label>\n\n                    {/* <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={mapItem.advantages}\n                      size={2}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLInputElement>) => this.updateInitAdvantages( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                      title={mapItem.label.toLowerCase() === \"npc\" ? \"NPC #\" + npcCount + \" advantages\" : \"PC #\" + pcCount + \" advantages\" }\n                    /> */}\n                    <select\n                      value={mapItem.advantages}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLSelectElement>) => this.updateInitAdvantages( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                      title={mapItem.label.toLowerCase() === \"npc\" ? \"NPC #\" + npcCount + \" advantages\" : \"PC #\" + pcCount + \" advantages\" }\n                    >\n                      <option value={0}>0</option>\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                      <option value={7}>7</option>\n                      <option value={8}>8</option>\n                    </select>\n                    <span>Advantages</span>\n                  </label>\n                </div>\n                <div className=\"triumphs\">\n                  <label>\n\n                    {/* <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={mapItem.advantages}\n                      size={2}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLInputElement>) => this.updateInitAdvantages( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                      title={mapItem.label.toLowerCase() === \"npc\" ? \"NPC #\" + npcCount + \" advantages\" : \"PC #\" + pcCount + \" advantages\" }\n                    /> */}\n                    <select\n                      value={mapItem.triumphs}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLSelectElement>) => this.updateInitTriumphs( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                      title={mapItem.label.toLowerCase() === \"npc\" ? \"NPC #\" + npcCount + \" triumphs\" : \"PC #\" + pcCount + \" triumphs\" }\n                    >\n                      <option value={0}>0</option>\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                      <option value={7}>7</option>\n                      <option value={8}>8</option>\n                    </select>\n                    <span>Triumphs</span>\n                  </label>\n                </div>\n                <div className=\"controls\">\n                  <Button\n                    variant=\"primary\"\n                    tabIndex={mapIndex + this.initMap.length + 5}\n                    onClick={() => this.removeSlot(mapIndex)}\n                    title=\"Remove this initiative slot\"\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </Button>\n                </div>\n              </div>\n            )\n          })}\n        </UIPage>\n      );\n    }\n}\n\ninterface IInitMapItem {\n  label: string;\n  successes: number;\n  advantages: number;\n  triumphs: number;\n}\n\ninterface IInitiativeProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IInitiativeState {\n    updated: boolean;\n\n}","import App from \"../AppRouter\";\n\nexport interface IAlert {\n    level: string;\n    title: string;\n    message: string;\n    messageclass: string;\n    externalURL: string;\n    link: string;\n    dismissable: boolean;\n    extraclass: string;\n    autoDismissSeconds: number;\n    dismissFunction: Function | null,\n}\n\nexport default class Alerts {\n\n    _app: App;\n\n    activeAlerts: IAlert[] = []\n\n    cancelTimeout: number = -1;\n\n    constructor( mainApp: App ) {\n        this._app = mainApp;\n        this.activeAlerts = [];\n    }\n\n    dismissAlert( alertIndex: number ): boolean {\n        if( this.cancelTimeout > -1 ) {\n            window.clearTimeout( this.cancelTimeout );\n        }\n        let alertID = document.getElementById(\"alert-index-\" + alertIndex);\n        if( alertID ) {\n            alertID.style.height = \"0px\";\n            alertID.style.paddingTop = \"0px\";\n            alertID.style.paddingBottom = \"0px\";\n            alertID.style.borderTop = \"0px\";\n            alertID.style.borderBottom = \"0px\";\n        }\n\n        if( this.activeAlerts.length > alertIndex ) {\n            if( this.activeAlerts[alertIndex].dismissable) {\n\n                window.setTimeout(\n                    () => {\n                        let dismissFunction: Function | null = null;\n                        if(  this.activeAlerts[alertIndex].dismissFunction ) {\n                            dismissFunction = this.activeAlerts[alertIndex].dismissFunction;\n                        }\n\n                        this.activeAlerts.splice( alertIndex, 1);\n\n                        if( dismissFunction ) {\n                            dismissFunction();\n                        }\n\n                        this._app.refreshGlobalState();\n                    },\n                    100\n                );\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    addAlert(\n        level: string,\n        title: string,\n        message: string,\n        messageclass: string = \"\",\n        dismissable: boolean = true,\n        dismissFunction: Function | null,\n        autoDismissSeconds: number = 0,\n        externalURL: string = \"\",\n        link: string = \"\",\n        extraclass: string = \"\",\n    ) {\n        this.activeAlerts.push(\n            {\n                level: level,\n                title: title,\n                message: message,\n                messageclass: messageclass,\n                externalURL: externalURL,\n                link: link,\n                dismissable: dismissable,\n                extraclass: extraclass,\n                autoDismissSeconds: autoDismissSeconds,\n                dismissFunction: dismissFunction,\n            }\n        );\n\n        let dismissIndex = this.activeAlerts.length - 1;\n        this._app.refreshGlobalState();\n        if( autoDismissSeconds > 0 ) {\n            window.setTimeout(\n                () => {\n                    let alertID = document.getElementById(\"alert-index-\" + dismissIndex);\n                    if( alertID ) {\n                        alertID.className = alertID.className + 'fade-away';\n                    }\n                },\n                (autoDismissSeconds * 1000) - 250\n\n            );\n            window.setTimeout(\n                () => {\n                    let alertID = document.getElementById(\"alert-bar-index-\" + dismissIndex);\n                    if( alertID ) {\n                        alertID.style.width = \"0px\";\n                    }\n                },\n                100\n\n            );\n            this.cancelTimeout = window.setTimeout(\n                () => {\n                    this.activeAlerts.splice(dismissIndex, 1);\n                    if( dismissFunction ) {\n                        dismissFunction();\n                    }\n\n                    this._app.refreshGlobalState();\n                },\n                autoDismissSeconds * 1000\n            );\n        }\n    }\n}\n","export const CONFIGSiteTitle = \"FFG Star Wars/Genesys Helpers\";","import React from 'react';\nimport './About.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class About extends React.Component<IAboutProps, IAboutState> {\n    constructor(props: IAboutProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"About\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"about\" appGlobals={this.props.appGlobals}>\n\n          <p>Genesys and its logo, and Genesys Foundry and its logo, are trademarks of Fantasy Flight Games in the U.S.A. and other countries. All Fantasy Flight Games characters and character names, and the distinctive likenesses thereof, are trademarks of Fantasy Flight Games. <a href=\"http://www.FantasyFlightGames.com\">www.FantasyFlightGames.com</a>.</p>\n\n          <p>All other original material in this work is copyright 2019 by Jeffrey Gordon and published under the GPL. </p>\n\n          <p>Star Wars and its logo are owned by Lucasfilm/Disney.</p>\n\n          <p>Die icons are owned by Fantasy Flight Games and/or Lucasfilm/Disney.</p>\n          <hr />\n\n          <p className=\"text-center\">This project is licensed under the GPL and you can contribute to the source at <a href=\"https://github.com/jdgwf/ffg-sw-genesys-helpers\">its GitHub repository.</a></p>\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IAboutProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IAboutState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Settings extends React.Component<ISettingsProps, ISettingsState> {\n    constructor(props: ISettingsProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n\n        this.setUITheme = this.setUITheme.bind(this);\n        this.setDieIconClass = this.setDieIconClass.bind(this);\n    }\n\n    setUITheme( event: React.FormEvent<HTMLSelectElement>) {\n      let settings = this.props.appGlobals.settings;\n      settings.uiTheme = event.currentTarget.value;\n      this.props.appGlobals.saveSettings( settings );\n    }\n\n    setDieIconClass( event: React.FormEvent<HTMLSelectElement>) {\n      let settings = this.props.appGlobals.settings;\n      settings.dieIconClass = event.currentTarget.value;\n      localStorage.setItem(\"forceDice\", \"0\");\n      this.props.appGlobals.saveSettings( settings );\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Settings\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"settings\" appGlobals={this.props.appGlobals}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <fieldset className=\"fieldset\">\n                  <legend>User Interface</legend>\n                  {/* <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={this.props.appGlobals.settings.uiDesaturated}\n                      onChange={this.toggleDesaturated}\n                    />&nbsp;Desaturated UI\n                  </label> */}\n                  <select\n                      value={this.props.appGlobals.settings.uiTheme}\n                      onChange={this.setUITheme}\n                  >\n                    <option value=\"\">Default</option>\n                    <option value=\"desaturated\">Desaturated</option>\n                    <option value=\"retro\">Retro</option>\n                  </select>\n                </fieldset>\n\n                <fieldset className=\"fieldset\">\n                  <legend>Die Icons</legend>\n                  {/* <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={this.props.appGlobals.settings.uiDesaturated}\n                      onChange={this.toggleDesaturated}\n                    />&nbsp;Desaturated UI\n                  </label> */}\n                  <select\n                      value={this.props.appGlobals.settings.dieIconClass}\n                      onChange={this.setDieIconClass}\n                  >\n                    <option value=\"\">Genesys</option>\n                    <option value=\"starwars\">Star Wars</option>\n                  </select>\n                </fieldset>\n              </div>\n              {/* <div className=\"col-md-6\">\n                <fieldset className=\"fieldset\">\n                  <legend>Data Syncing </legend>\n                    (TODO: sync settings/logins)\n                  </fieldset>\n              </div> */}\n            </div>\n\n        </UIPage>\n      );\n    }\n}\n\ninterface ISettingsProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface ISettingsState {\n    updated: boolean;\n\n}","import React from 'react';\n// import './Temp.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Temp extends React.Component<ITempProps, ITempState> {\n    constructor(props: ITempProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Temp\");\n    }\n\n    render() {\n      let letters = [\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"i\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"m\",\n        \"n\",\n        \"o\",\n        \"p\",\n        \"q\",\n        \"r\",\n        \"s\",\n        \"t\",\n        \"u\",\n        \"v\",\n        \"w\",\n        \"x\",\n        \"y\",\n        \"z\",\n        \"A\",\n        \"B\",\n        \"C\",\n        \"D\",\n        \"E\",\n        \"F\",\n        \"G\",\n        \"H\",\n        \"I\",\n        \"J\",\n        \"K\",\n        \"L\",\n        \"M\",\n        \"N\",\n        \"O\",\n        \"P\",\n        \"Q\",\n        \"R\",\n        \"S\",\n        \"T\",\n        \"U\",\n        \"V\",\n        \"W\",\n        \"X\",\n        \"Y\",\n        \"Z\",\n      ]\n      return (\n        <UIPage current=\"Temp\" appGlobals={this.props.appGlobals}>\n\n          <p className=\"text-box\">\n            <span className='symbols'>a</span> = Advantage<br />\n            <span className='symbols'>h</span> = Threat<br />\n            <span className='symbols'>f</span> = Failure<br />\n            <span className='symbols'>s</span> = Success<br />\n            <span className='symbols'>t</span> = Triumph<br />\n            <span className='symbols'>d</span> = Despair<br />\n            <span className='die-setback'>b</span> = Setback Dice<br />\n            <span className='die-boost'>b</span> = Boost Dice<br />\n            <span className='die-difficulty'>d</span> = Difficulty Dice<br />\n            <span className='die-ability'>d</span> = Ability Dice<br />\n            <span className='die-challenge'>c</span> = Challenge Dice<br />\n            <span className='die-proficiency'>c</span> = Proficiency Dice <br />\n          </p>\n          <p>Star Wars<br />\n            <span className='dice'>s</span> = Success<br />\n            <span className='dice'>a</span> = Advantage<br />\n            <span className='dice'>x</span> = Triumph<br />\n            <br />\n            <span className='dice'>f</span> = Failure<br />\n            <span className='dice'>t</span> = Threat<br />\n            <span className='dice'>y</span> = Despair<br />\n\n            <span className='dice'>z</span> = Dark Side<br />\n            <span className='dice'>Z</span> = Light Side<br />\n            {/* {letters.map( (char, charINdex) => {\n              return (\n                <div><span className=\"dice\">{char}</span> = {char}</div>\n              )\n            })} */}\n          </p>\n        </UIPage>\n      );\n    }\n}\n\ninterface ITempProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface ITempState {\n    updated: boolean;\n\n}","export interface IDiceResults {\n    rolls: IDieResult[];\n    netSuccesses: number;\n    netAdvantages: number;\n    netFailures: number;\n    netThreats: number;\n    netTriumphs: number;\n    netDespairs: number;\n    netLightSide: number;\n    netDarkSide: number;\n    grossSuccesses: number;\n    grossAdvantages: number;\n    grossFailures: number;\n    grossThreats: number;\n    grossTriumphs: number;\n    grossDespairs: number;\n    grossLightSide: number;\n    grossDarkSide: number;\n\n    total: number;\n}\n\nexport interface IDieResult {\n    type: string;\n    title: string;\n    numSides: number;\n    rawRoll: number;\n    successes: number;\n    advantages: number;\n    failures: number;\n    threats: number;\n    triumphs: number;\n    despairs: number;\n    lightSide: number;\n    darkSide: number;\n}\n\nexport default class Dice {\n\n    private _getRandomInt(numberOfSides: number): number {\n        return Math.floor(Math.random() * Math.floor(numberOfSides));\n    }\n\n    public rollDie( numberOfSides: number = 6 ): number {\n        return this._getRandomInt( numberOfSides) + 1;\n    }\n\n    public rollFGDice(\n        ability: number = 0,\n        proficiency: number = 0,\n        boosts: number = 0,\n\n        difficulty: number = 0,\n        challlenge: number = 0,\n        setback: number = 0,\n\n        force: number = 0,\n    ): IDiceResults {\n\n        let netSuccesses: number = 0;\n        let netAdvantages: number = 0;\n        let netFailures: number = 0;\n        let netThreats: number = 0;\n        let netTriumphs: number = 0;\n        let netDespairs: number = 0;\n        let grossSuccesses: number = 0;\n        let grossAdvantages: number = 0;\n        let grossFailures: number = 0;\n        let grossThreats: number = 0;\n        let grossTriumphs: number = 0;\n        let grossDespairs: number = 0;\n\n        let netLightSide: number = 0;\n        let grossLightSide: number = 0;\n\n        let netDarkSide: number = 0;\n        let grossDarkSide: number = 0;\n\n        let rolls: IDieResult[] = [];\n\n\n        // Proficiency Dice\n        for( let dieCount = 0; dieCount < proficiency; dieCount++) {\n            let roll = this.rollDie(12);\n            let rawRoll = {\n                type: \"proficiency\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 3: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 4: {\n                    // two successes\n                    rawRoll.successes++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"Two Successes\";\n                    break;\n                }\n                case 5: {\n                    // two successes\n                    rawRoll.successes++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"Two Successes\";\n                    break;\n                }\n                case 6: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n                case 7: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, one success\";\n                    break;\n                }\n                case 8: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, one success\";\n\n                    break;\n                }\n                case 9: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, one success\";\n                    break;\n                }\n                case 10: {\n                    // two advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n                case 11: {\n                    // two advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n                case 12: {\n                    // one success and a triumph\n                    rawRoll.successes++;\n                    rawRoll.triumphs++;\n                    rawRoll.title = \"One Triumph (counts as success)\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n\n\n        // Ability Dice\n        for( let dieCount = 0; dieCount < ability; dieCount++) {\n            let roll = this.rollDie(8);\n            let rawRoll = {\n                type: \"ability\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"( nothing )\";\n                    break;\n                }\n                case 2: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 3: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 4: {\n                    // two successes\n                    rawRoll.successes++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"Two Successes\";\n                    break;\n                }\n                case 5: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n                case 6: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n                case 7: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, One Success\";\n                    break;\n                }\n                case 8: {\n                    // one advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Boost Dice\n        for( let dieCount = 0; dieCount < boosts; dieCount++) {\n            let roll = this.rollDie(6);\n            let rawRoll = {\n                type: \"boost\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 3: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 4: {\n                    // one success, one advantage\n                    rawRoll.successes++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Success, One Advantage\";\n                    break;\n                }\n                case 5: {\n                    // two advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n                case 6: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Difficulty Dice\n        for( let dieCount = 0; dieCount < difficulty; dieCount++) {\n            let roll = this.rollDie(8);\n            let rawRoll = {\n                type: \"difficulty\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 3: {\n                    // two failures\n                    rawRoll.failures++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"Two Failures\";\n                    break;\n                }\n                case 4: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 5: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 6: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 7: {\n                    // two threats\n                    rawRoll.threats++;\n                    rawRoll.threats++;\n                    rawRoll.title = \"Two Threats\";\n\n                    break;\n                }\n                case 8: {\n                    // one threat, one failure\n                    rawRoll.threats++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Threat, One Failure\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Setback Dice\n        for( let dieCount = 0; dieCount < setback; dieCount++) {\n            let roll = this.rollDie(6);\n            let rawRoll = {\n                type: \"setback\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 3: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 4: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 5: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 6: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Challenge Dice\n        for( let dieCount = 0; dieCount < challlenge; dieCount++) {\n            let roll = this.rollDie(12);\n            let rawRoll = {\n                type: \"challenge\",\n                title: \"\",\n                numSides: 12,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 3: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 4: {\n                    // two failures\n                    rawRoll.failures++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"Two Failures\";\n                    break;\n                }\n                case 5: {\n                    // two failures\n                    rawRoll.failures++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"Two Failures\";\n                    break;\n                }\n                case 6: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 7: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 8: {\n                    // one threat, one failure\n                    rawRoll.threats++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Threat, One Failure\";\n                    break;\n                }\n                case 9: {\n                    // one threat, one failure\n                    rawRoll.threats++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Threat, One Failure\";\n                    break;\n                }\n                case 10: {\n                    // two threats\n                    rawRoll.threats++;\n                    rawRoll.threats++;\n                    rawRoll.title = \"Two Threats\";\n                    break;\n                }\n                case 11: {\n                    // two threats\n                    rawRoll.threats++;\n                    rawRoll.threats++;\n                    rawRoll.title = \"Two Threats\";\n                    break;\n                }\n                case 12: {\n                    // one failure and a despair\n                    rawRoll.failures++;\n                    rawRoll.despairs++;\n                    rawRoll.title = \"One Despair (counts as failure)\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n\n        // Force Dice\n        for( let dieCount = 0; dieCount < force; dieCount++) {\n            let roll = this.rollDie(12);\n            let rawRoll = {\n                type: \"force\",\n                title: \"\",\n                numSides: 12,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    break;\n                }\n                case 2: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 3: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 4: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 5: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 6: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 7: {\n                    // two dark side\n                    rawRoll.darkSide++;\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"Two Dark Side Points\";\n\n                    break;\n                }\n                case 8: {\n                    // one light side\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"One Light Side Point\";\n                    break;\n                }\n                case 9: {\n                    // one light side\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"One Light Side Point\";\n                    break;\n                }\n                case 10: {\n                    // two light side\n                    rawRoll.lightSide++;\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"Two Light Side Points\";\n                    break;\n                }\n                case 11: {\n                    // two light side\n                    rawRoll.lightSide++;\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"Two Light Side Points\";\n                    break;\n                }\n                case 12: {\n                    // two light side\n                    rawRoll.lightSide++;\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"Two Light Side Points\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // TODO Calculate gross values...\n        for( let roll of rolls ) {\n            netSuccesses += roll.successes;\n            netAdvantages += roll.advantages;\n            netFailures += roll.failures;\n            netThreats += roll.threats;\n            netDespairs += roll.despairs;\n            netTriumphs += roll.triumphs;\n\n            netLightSide += roll.lightSide;\n            netDarkSide += roll.darkSide;\n        }\n\n        if( netSuccesses > netFailures ) {\n            grossSuccesses = netSuccesses - netFailures;\n        } else {\n            grossFailures = netFailures - netSuccesses;\n        }\n\n        if( netThreats > netAdvantages ) {\n            grossThreats = netThreats - netAdvantages;\n        } else {\n            grossAdvantages = netAdvantages - netThreats;\n        }\n\n        if( netDespairs > netTriumphs ) {\n            grossDespairs = netDespairs - netTriumphs;\n        } else {\n            grossTriumphs = netTriumphs - netDespairs;\n        }\n\n        // if( netDarkSide > netLightSide ) {\n            grossDarkSide = netDarkSide; // - netLightSide;\n        // } else {\n            grossLightSide = netLightSide; // - netDarkSide;\n        // }\n\n        return {\n            rolls: rolls,\n            netSuccesses: netSuccesses,\n            netAdvantages: netAdvantages,\n            netFailures: netFailures,\n            netThreats: netThreats,\n            netTriumphs: netTriumphs,\n            netDespairs: netDespairs,\n            grossSuccesses: grossSuccesses,\n            grossAdvantages: grossAdvantages,\n            grossFailures: grossFailures,\n            grossThreats: grossThreats,\n            grossTriumphs: grossTriumphs,\n            grossDespairs: grossDespairs,\n\n            grossDarkSide: grossDarkSide,\n            grossLightSide: grossLightSide,\n            netLightSide: netLightSide,\n            netDarkSide: netDarkSide,\n\n            total: 0,\n        }\n    }\n}","import React from 'react';\nimport { IDieResult } from '../Classes/Dice';\nimport { IAppGlobals } from '../AppRouter';\nimport './Die.scss';\n\nexport default class Die extends React.Component<IDieProps, {}> {\n\n    className: string = \"\";\n\n    constructor(props: IDieProps) {\n        super(props);\n        if( this.props.className ) {\n            this.className = this.props.className;\n        }\n    }\n\n    render() {\n        let success = \"s\";\n        let advantage = \"a\";\n        let triumph = \"t\";\n\n        let failure = \"f\";\n        let threat= \"h\";\n        let despair = \"d\";\n\n        let darkSide = \"\";\n        let lightSide = \"\";\n\n        if( this.props.appGlobals.settings.dieIconClass === \"starwars\") {\n            success = \"s\";\n            advantage = \"a\";\n            triumph = \"x\";\n\n            failure = \"f\";\n            threat= \"t\";\n            despair = \"y\";\n\n            darkSide = \"z\";\n            lightSide = \"Z\";\n        }\n\n        return (\n            <>\n            <div\n                className={\"die die-\" + this.props.dieResult.type + \" \" + this.className}\n                title={this.props.dieResult.title + \" (raw #\" + this.props.dieResult.rawRoll + \")\" }\n            >\n\n                <div className=\"die-bg\">\n                    {this.props.dieResult.type === \"setback\" ? (\n                        <span className=\"setback\">b</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"boost\" ? (\n                        <span className=\"boost\">b</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"difficulty\" ? (\n                        <span className=\"difficulty\">d</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"ability\" ? (\n                        <span className=\"ability\">d</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"challenge\" ? (\n                        <span className=\"challenge\">c</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"proficiency\" ? (\n                        <span className=\"proficiency\">c</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"force\" ? (\n                        <span className=\"force\">c</span>\n                    ) : (\n                        <></>\n                    )}\n                </div>\n                <div className={\"die-face \" + this.props.appGlobals.settings.dieIconClass }>\n                    {this.props.dieResult.triumphs === 1 ?\n                    (\n                        <span className=\"icon-single\">{triumph}</span>\n                    ) : (\n                        <>\n                            {this.props.dieResult.despairs === 1 ?\n                            (\n                              <span className=\"icon-single\">{despair}</span>\n                            ) : (\n                                <>\n                                    {this.props.dieResult.successes === 1 ? (\n                                        <>\n                                        {this.props.dieResult.advantages === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{success}</span>\n                                                <span className=\"icon-2\">{advantage}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{success}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.successes === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{success}</span>\n                                            <span className=\"icon-2\">{success}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.advantages === 1 ? (\n                                        <>\n                                        {this.props.dieResult.successes === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{success}</span>\n                                                <span className=\"icon-2\">{advantage}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{advantage}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.advantages === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{advantage}</span>\n                                            <span className=\"icon-2\">{advantage}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.failures === 1 ? (\n                                        <>\n                                        {this.props.dieResult.threats === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{failure}</span>\n                                                <span className=\"icon-2\">{threat}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{failure}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.failures === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{failure}</span>\n                                            <span className=\"icon-2\">{failure}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.threats === 1 ? (\n                                        <>\n                                        {this.props.dieResult.failures === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{failure}</span>\n                                                <span className=\"icon-2\">{threat}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{threat}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.threats === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{threat}</span>\n                                            <span className=\"icon-2\">{threat}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.darkSide === 1 ? (\n                                        <>\n                                            <span className=\"icon-single\">{darkSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.darkSide === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{darkSide}</span>\n                                            <span className=\"icon-2\">{darkSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.lightSide === 1 ? (\n                                        <>\n                                            <span className=\"icon-single\">{lightSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.lightSide === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{lightSide}</span>\n                                            <span className=\"icon-2\">{lightSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n\n                </div>\n\n                <div className=\"raw-roll\">{\"#\" + this.props.dieResult.rawRoll}</div>\n            </div>\n            </>\n        )\n    }\n}\n\n\ninterface IDieProps {\n    appGlobals: IAppGlobals;\n    dieResult: IDieResult;\n    className?: string;\n}\n\n","import React from 'react';\nimport './Dice.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\nimport Dice, { IDiceResults } from '../Classes/Dice';\nimport Die from '../Components/Die';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n\nexport default class DicePage extends React.Component<IDiceProps, IDiceState> {\n    dieRolls: IDiceResults | null = null;\n    diceObj = new Dice();\n    constructor(props: IDiceProps) {\n        super(props);\n\n        let abilityDice = 3;\n        let proficiencyDice = 1;\n        let boostsDice = 0;\n        let difficultyDice = 2;\n        let challengeDice = 0;\n        let setbackDice = 0;\n        let forceDice = 0;\n\n        let abilityDiceLS = localStorage.getItem(\"abilityDice\");\n        if( abilityDiceLS ) {\n          abilityDice = +abilityDiceLS;\n        }\n\n        let proficiencyDiceLS = localStorage.getItem(\"proficiencyDice\");\n        if( proficiencyDiceLS ) {\n          proficiencyDice = +proficiencyDiceLS;\n        }\n\n        let boostsDiceLS = localStorage.getItem(\"boostsDice\");\n        if( boostsDiceLS ) {\n          boostsDice = +boostsDiceLS;\n        }\n\n        let difficultyDiceLS = localStorage.getItem(\"difficultyDice\");\n        if( difficultyDiceLS ) {\n          difficultyDice = +difficultyDiceLS;\n        }\n\n        let challengeDiceLS = localStorage.getItem(\"challengeDice\");\n        if( challengeDiceLS ) {\n          challengeDice = +challengeDiceLS;\n        }\n\n        let setbackDiceLS = localStorage.getItem(\"setbackDice\");\n        if( setbackDiceLS ) {\n          setbackDice = +setbackDiceLS;\n        }\n\n        let forceDiceLS = localStorage.getItem(\"forceDice\");\n        if( forceDiceLS ) {\n          forceDice = +forceDiceLS;\n        }\n\n        this.state = {\n            updated: false,\n\n            abilityDice: abilityDice,\n            proficiencyDice: proficiencyDice,\n            boostsDice: boostsDice,\n            difficultyDice: difficultyDice,\n            challengeDice: challengeDice,\n            setbackDice: setbackDice,\n            forceDice: forceDice,\n        }\n\n        this.rollDice = this.rollDice.bind(this);\n\n        this.rollDice();\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Dice\");\n    }\n\n    rollDice() {\n      this.dieRolls = this.diceObj.rollFGDice(\n        this.state.abilityDice, // ability\n        this.state.proficiencyDice, // proficiency\n        this.state.boostsDice, // boosts\n\n        this.state.difficultyDice, // difficulty\n        this.state.challengeDice, // challenge\n        this.state.setbackDice, // setback\n\n        this.state.forceDice, // force\n      );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    incrementDie(dieType: string, incrementCount: number = 1) {\n      switch( dieType.toLowerCase().trim() ) {\n        case \"ability\": {\n          let newValue = this.state.abilityDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"abilityDice\", (newValue).toString())\n          this.setState({\n            abilityDice: newValue,\n          })\n          break;\n        }\n\n        case \"proficiency\": {\n          let newValue = this.state.proficiencyDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"proficiencyDice\", (newValue).toString())\n          this.setState({\n            proficiencyDice: newValue,\n          })\n          break;\n        }\n\n        case \"setback\": {\n          let newValue = this.state.setbackDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"setbackDice\", (newValue).toString())\n          this.setState({\n            setbackDice: newValue,\n          })\n          break;\n        }\n\n        case \"difficulty\": {\n          let newValue = this.state.difficultyDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"difficultyDice\", (newValue).toString())\n          this.setState({\n            difficultyDice: newValue,\n          })\n          break;\n        }\n\n        case \"force\": {\n          let newValue = this.state.forceDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"forceDice\", (newValue).toString())\n          this.setState({\n            forceDice: newValue,\n          })\n          break;\n        }\n\n        case \"boost\": {\n          let newValue = this.state.boostsDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"boostsDice\", (newValue).toString())\n          this.setState({\n            boostsDice: newValue,\n          })\n          break;\n        }\n\n        case \"challenge\": {\n          let newValue = this.state.challengeDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"challengeDice\", (newValue).toString())\n          this.setState({\n            challengeDice: newValue,\n          })\n          break;\n        }\n      }\n    }\n\n    render() {\n      return (\n        <UIPage current=\"dice\" appGlobals={this.props.appGlobals}>\n\n        <div className=\"dice-select-container\">\n\n        <div className=\"text-center dice-select\">\n              <span className=\"title\">Proficiency</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-proficiency\">c</span>&nbsp;x{this.state.proficiencyDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"proficiency\", -1)}\n                disabled={this.state.proficiencyDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"proficiency\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n          <div className=\"text-center dice-select\">\n              <span className=\"title\">Ability</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-ability\">d</span>&nbsp;x{this.state.abilityDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"ability\", -1)}\n                disabled={this.state.abilityDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"ability\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n\n          <div className=\"text-center dice-select\">\n              <span className=\"title\">Boost</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-boost\">b</span>&nbsp;x{this.state.boostsDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"boost\", -1)}\n                disabled={this.state.boostsDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"boost\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n          <div className=\"text-center dice-select\">\n            <span className=\"title\">Setback</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-setback\">b</span>&nbsp;x{this.state.setbackDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"setback\", -1)}\n                disabled={this.state.setbackDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"setback\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n\n          <div className=\"text-center dice-select\">\n              <span className=\"title\">Difficulty</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-difficulty\">d</span>&nbsp;x{this.state.difficultyDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"difficulty\", -1)}\n                disabled={this.state.difficultyDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"difficulty\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n          <div className=\"text-center dice-select\">\n            <span className=\"title\">Challenge</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-challenge\">c</span>&nbsp;x{this.state.challengeDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"challenge\", -1)}\n                disabled={this.state.challengeDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"challenge\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n{this.props.appGlobals.settings.dieIconClass === \"starwars\" ? (\n  <>\n          <div className=\"text-center dice-select\">\n            <span className=\"title\">Force</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-force\">c</span>&nbsp;x{this.state.forceDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"force\", -1)}\n                disabled={this.state.forceDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"force\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n  </>\n) :\n(\n  <></>\n)}\n\n\n        </div>\n        <div className=\"text-center\">\n          <Button\n            variant=\"primary\"\n            onClick={this.rollDice}\n          >Roll</Button>\n        </div>\n\n        {this.dieRolls ? (\n          <>\n          <div className=\"die-box text-center\">\n            {this.dieRolls.rolls.map( (result, resultIndex) => {\n              return (\n                <>\n                <Die\n                  key={resultIndex}\n                  appGlobals={this.props.appGlobals}\n                  dieResult={result}\n                  className=\"\"\n                />\n                </>\n              )\n            })}\n            <p>\n\n              {this.dieRolls.grossSuccesses !== 0 ? (\n                <>\n                Successes: {this.dieRolls.grossSuccesses}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossAdvantages !== 0 ? (\n                <>\n                  Advantages: {this.dieRolls.grossAdvantages}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossFailures !== 0 ? (\n                <>\n                  Failures: {this.dieRolls.grossFailures}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossThreats !== 0 ? (\n                <>\n                  Threats: {this.dieRolls.grossThreats}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n\n              {this.dieRolls.grossTriumphs !== 0 ? (\n                <>\n                  Triumphs: {this.dieRolls.grossTriumphs}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossDespairs !== 0 ? (\n                <>\n                  Despairs: {this.dieRolls.grossDespairs}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossLightSide !== 0 ? (\n                <>\n                  Light Side: {this.dieRolls.grossLightSide}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossDarkSide !== 0 ? (\n                <>\n                  Dark Side: {this.dieRolls.grossDarkSide}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n            </p>\n          </div>\n          </>\n        ) : (\n          <></>\n        )}\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IDiceProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IDiceState {\n    updated: boolean;\n\n    abilityDice: number;\n    proficiencyDice: number;\n    boostsDice: number;\n    difficultyDice: number;\n    challengeDice: number;\n    setbackDice: number;\n    forceDice: number;\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Error404 from \"./Pages/Error404\";\nimport Initiative from \"./Pages/Initiative\";\nimport Alerts from './Classes/Alerts';\nimport { Modal, Button } from 'react-bootstrap';\nimport SanitizedHTML from \"./Components/SanitizedHTML\";\nimport { CONFIGSiteTitle } from \"./config\";\nimport About from \"./Pages/About\";\nimport Settings from \"./Pages/Settings\";\nimport Temp from \"./Pages/Temp\";\nimport Dice from \"./Pages/Dice\";\n\n\n\nexport default class AppRouter extends React.Component<IAppRouterProps, IAppRouterState> {\n\n    constructor(props: IAppRouterProps) {\n        super(props);\n\n        this.makeDocumentTitle = this.makeDocumentTitle.bind(this);\n        this.openConfirmDialog = this.openConfirmDialog.bind(this);\n        this.closeConfirmDialog = this.closeConfirmDialog.bind(this);\n        this.confirmConfirmDialog = this.confirmConfirmDialog.bind(this);\n        this.refreshGlobalState = this.refreshGlobalState.bind(this);\n        this.toggleMobile = this.toggleMobile.bind(this);\n        this.closeMobile = this.closeMobile.bind(this);\n        this.saveSettings = this.saveSettings.bind(this);\n\n        let uiTheme: string = \"\";\n        let lsTheme = localStorage.getItem(\"uiTheme\");\n        if( lsTheme ) {\n            uiTheme = lsTheme;\n            document.body.className = uiTheme;\n        } else {\n            document.body.className = '';\n        }\n\n\n        let dieIconClass: string = \"genesys\";\n        let lsDieIconClass = localStorage.getItem(\"dieIconClass\");\n        if( lsDieIconClass ) {\n            dieIconClass = lsDieIconClass;\n        }\n\n        this.state = {\n            updated: false,\n            appGlobals: {\n                settings: {\n                    uiTheme: uiTheme,\n                    dieIconClass: dieIconClass,\n                },\n                currentPageTitle: \"\",\n                siteAlerts: new Alerts( this ),\n                showMobile: false,\n                confirmDialogMessage: \"\",\n                confirmDialogTitle: \"\",\n                confirmDialogYesLabel: \"\",\n                confirmDialogNoLabel: \"\",\n                showConfirmDialog: false,\n                confirmDialogConfirm: null,\n                makeDocumentTitle: this.makeDocumentTitle,\n                openConfirmDialog: this.openConfirmDialog,\n                refreshGlobalState: this.refreshGlobalState,\n                toggleMobile: this.toggleMobile,\n                closeMobile: this.closeMobile,\n\n                saveSettings: this.saveSettings,\n            }\n        }\n\n    }\n\n    saveSettings( settings: ISettings ): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.settings = settings;\n        this.setState({\n            appGlobals: appGlobals,\n        });\n\n        if( settings.uiTheme.trim() ) {\n            document.body.className = settings.uiTheme;\n        } else {\n            document.body.className = '';\n        }\n\n        localStorage.setItem(\"uiTheme\", settings.uiTheme);\n        localStorage.setItem(\"dieIconClass\", settings.dieIconClass);\n    }\n\n    toggleMobile(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showMobile = !appGlobals.showMobile;\n        this.setState({\n            appGlobals: appGlobals,\n            updated: true,\n        })\n    }\n\n    closeMobile(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showMobile = false;\n        this.setState({\n            appGlobals: appGlobals,\n            updated: true,\n        })\n    }\n\n    makeDocumentTitle( subTitle: string = \"\" ): void {\n        let appGlobals = this.state.appGlobals;\n        if( subTitle ) {\n            document.title = subTitle + \" | \" + CONFIGSiteTitle;\n            appGlobals.currentPageTitle = subTitle;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        } else {\n            document.title = CONFIGSiteTitle;\n            appGlobals.currentPageTitle = subTitle;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        }\n    }\n\n    refreshGlobalState(appGlobals: IAppGlobals | null = null): void {\n        if( !appGlobals ) {\n            this.setState({\n                updated: true,\n            });\n        } else {\n            this.setState({\n                updated: true,\n                appGlobals: appGlobals,\n            });\n        }\n    }\n\n    closeConfirmDialog(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showConfirmDialog = false;\n        this.setState({\n            appGlobals: appGlobals,\n        })\n    }\n\n    confirmConfirmDialog(): void {\n        if( this.state.appGlobals ) {\n            if( this.state.appGlobals.confirmDialogConfirm ) {\n                this.state.appGlobals.confirmDialogConfirm();\n            }\n            let appGlobals = this.state.appGlobals;\n            appGlobals.showConfirmDialog = false;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        }\n    }\n\n    openConfirmDialog(\n        confirmTitle: string,\n        confirmMessage: string,\n        confirmYesLabel: string,\n        confirmNoLabel: string,\n        confirmCallback: Function,\n    ): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.confirmDialogMessage = confirmMessage;\n        appGlobals.confirmDialogTitle = confirmTitle;\n        appGlobals.confirmDialogYesLabel = confirmYesLabel;\n        appGlobals.confirmDialogNoLabel = confirmNoLabel;\n        appGlobals.showConfirmDialog = true;\n        appGlobals.confirmDialogConfirm = confirmCallback;\n        this.setState({\n            appGlobals: appGlobals,\n        })\n    }\n\n\n    render() {\n        return (\n            <Router>\n            <Modal show={this.state.appGlobals.showConfirmDialog} onHide={this.closeConfirmDialog}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                            {this.state.appGlobals.confirmDialogTitle}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"form\">\n                        <div>\n                            <SanitizedHTML html={this.state.appGlobals.confirmDialogMessage} />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n\n                    <Button variant=\"secondary\" onClick={this.closeConfirmDialog}>\n                        {this.state.appGlobals.confirmDialogNoLabel}\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.confirmConfirmDialog}>\n                        {this.state.appGlobals.confirmDialogYesLabel}\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n            <Switch>\n                <Route path={`${process.env.PUBLIC_URL}/`} exact>\n                    <Home\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n\n                <Route path={`${process.env.PUBLIC_URL}/initiative`} exact>\n                    <Initiative\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/about`} exact>\n                    <About\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/temp`} exact>\n                    <Temp\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/dice`} exact>\n                    <Dice\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/settings`} exact>\n                    <Settings\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route>\n                    <Error404\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n\n            </Switch>\n            </Router>\n        );\n    }\n}\n\ninterface IAppRouterProps {\n\n}\n\ninterface ISettings {\n    uiTheme: string;\n    dieIconClass: string;\n}\n\ninterface IAppRouterState {\n    appGlobals: IAppGlobals;\n    updated: boolean;\n}\n\nexport interface IAppGlobals {\n    currentPageTitle: string;\n    siteAlerts: Alerts;\n    settings: ISettings;\n    showMobile: boolean;\n    confirmDialogMessage: string;\n    confirmDialogTitle: string;\n    confirmDialogYesLabel: string;\n    confirmDialogNoLabel: string;\n    showConfirmDialog: boolean;\n    confirmDialogConfirm: Function | null;\n    refreshGlobalState(appGlobals: IAppGlobals | null): void;\n\n    makeDocumentTitle( subTitle: string ): void;\n\n    toggleMobile(): void;\n    closeMobile(): void;\n\n    openConfirmDialog(\n        confirmTitle: string,\n        confirmMessage: string,\n        confirmYesLabel: string,\n        confirmNoLabel: string,\n        confirmCallback: Function,\n    ): void;\n\n\n    saveSettings( settings: ISettings ): void;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './AppRouter';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your Home to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}