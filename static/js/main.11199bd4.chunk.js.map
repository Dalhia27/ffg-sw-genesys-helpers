{"version":3,"sources":["serviceWorker.ts","Components/SanitizedHTML.tsx","Components/ShowAlerts.tsx","Components/TopMenu.tsx","Components/UIPage.tsx","Pages/Home.tsx","Pages/Error404.tsx","Components/NumberSelect.tsx","Components/SkillSelect.tsx","Classes/Dice.ts","Pages/Initiative.tsx","Classes/Alerts.ts","config.ts","Pages/About.tsx","Pages/Settings.tsx","Pages/Temp.tsx","Components/Die.tsx","Pages/Dice.tsx","AppRouter.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","sanitizeHtml","require","SanitizedHTML","props","state","this","raw","dangerouslySetInnerHTML","__html","html","allowedTags","allowedAttributes","React","ShowAlerts","updated","alertIndex","appGlobals","siteAlerts","dismissAlert","setState","className","activeAlerts","map","alert","key","id","autoDismissSeconds","level","extraclass","style","display","height","onClick","fontSize","title","icon","faTimesCircle","spin","dismissable","message","messageclass","externalURL","href","link","to","TopMenu","toggleMobile","bind","closeMobile","faBars","current","process","Component","UIPage","showMobile","sub","children","Home","makeDocumentTitle","Error404","NumberSelect","max","numberSelectUI","numberSelect","push","onChange","index","value","SkillSelect","newValue","newValueObj","skillDice","attributeDice","proficiencySelectUI","proficiencySelectNumber","updateProficiencyDie","abilitySelectUI","abilitySelectNumber","updateAbilityDie","skillDieView","maxValue","minValue","lCount","label","Dice","numberOfSides","Math","floor","random","_getRandomInt","ability","proficiency","boosts","difficulty","challlenge","setback","force","netSuccesses","netAdvantages","netFailures","netThreats","netTriumphs","netDespairs","grossSuccesses","grossAdvantages","grossFailures","grossThreats","grossTriumphs","grossDespairs","netLightSide","netDarkSide","rolls","dieCount","roll","rollDie","rawRoll","type","numSides","successes","advantages","failures","threats","triumphs","despairs","lightSide","darkSide","grossDarkSide","grossLightSide","total","Initiative","numPCs","numNPCs","currentInitiative","initMap","lsNumPCs","localStorage","getItem","lsInitMap","lsCurrentInitiative","lsHideControls","hideControls","lsHideRolls","hideRolls","editItem","editItemIndex","Number","isNaN","JSON","parse","count","npc","skillCool","skillVigilance","item","updateInitSuccesses","updateInitAdvantages","updateInitTriumphs","updateNumPCs","addItem","sortInit","initForward","initBackward","removeSlot","handleClose","editSlot","updateCoolValue","updateVigilanceValue","rollVigilance","rollCool","updateNPC","toggleHideControls","toggleHideRolls","setItem","event","length","currentTarget","checked","stringify","indexNumber","dieResults","rollFGDice","getattributeDice","getProcidiencyDice","skill","init","toString","sort","a","b","splice","success","advantage","triumph","settings","dieIconClass","Modal","onHide","show","Header","closeButton","Body","Footer","Button","variant","tabIndex","faAngleDoubleLeft","faAngleDoubleRight","mapItem","mapIndex","successCount","skillCoolDieView","skillVigilanceDieView","faDice","faCog","faTrash","Alerts","mainApp","_app","cancelTimeout","clearTimeout","alertID","document","getElementById","paddingTop","paddingBottom","borderTop","borderBottom","setTimeout","dismissFunction","refreshGlobalState","dismissIndex","width","CONFIGSiteTitle","About","Settings","setUITheme","setDieIconClass","uiTheme","saveSettings","Temp","Die","failure","threat","despair","dieResult","DicePage","dieRolls","diceObj","abilityDice","proficiencyDice","boostsDice","difficultyDice","challengeDice","setbackDice","forceDice","abilityDiceLS","proficiencyDiceLS","boostsDiceLS","difficultyDiceLS","challengeDiceLS","setbackDiceLS","forceDiceLS","rollDice","dieType","incrementCount","toLowerCase","trim","incrementDie","disabled","faMinus","faPlus","result","resultIndex","AppRouter","openConfirmDialog","closeConfirmDialog","confirmConfirmDialog","lsTheme","body","lsDieIconClass","currentPageTitle","confirmDialogMessage","confirmDialogTitle","confirmDialogYesLabel","confirmDialogNoLabel","showConfirmDialog","confirmDialogConfirm","subTitle","confirmTitle","confirmMessage","confirmYesLabel","confirmNoLabel","confirmCallback","Title","path","exact","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11199bd4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\n// import * as sanitizeHtml from 'sanitize-html';\nvar sanitizeHtml = require('sanitize-html');\n\nexport default class SanitizedHTML extends React.Component<ISanitizedHTMLProps, ISanitizedHTMLState> {\n\n    constructor(props: ISanitizedHTMLProps) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    async componentWillMount() {\n\n    }\n\n    // For the SanitizeHTML function/module docs go here:\n    // https://www.npmjs.com/package/sanitize-html\n\n    render() {\n\n        if( this.props.raw ) {\n            return (\n                <span\n                    dangerouslySetInnerHTML={\n                        {\n                            __html: this.props.html\n                        }\n                    }\n                ></span>\n            )\n        } else {\n            return (\n                <span\n                    dangerouslySetInnerHTML={\n                        {\n                            __html: sanitizeHtml(\n                                this.props.html,\n                                {\n                                    allowedTags: [\n                                        \"h1\",\n                                        \"h2\",\n                                        \"h3\",\n                                        \"h4\",\n\n                                        \"svg\",\n\n                                        \"div\",\n                                        \"span\",\n                                        \"p\",\n\n                                        \"ol\",\n                                        \"ul\",\n                                        \"li\",\n\n                                        \"img\",\n\n                                        \"sup\",\n\n                                        \"strong\",\n                                        \"em\",\n\n                                        \"br\",\n                                        \"hr\"\n                                    ],\n                                    allowedAttributes: {\n                                        'div': [ 'class', 'id' ],\n                                        'span': [ 'class', 'id' ],\n                                        'p': [ 'class', 'id' ],\n                                        'img': ['src', 'class', 'id', 'style'],\n                                        'ul': [ 'class', 'id' ],\n                                    },\n                                }\n                            )\n                        }\n                    }\n                />\n            )\n        }\n    }\n}\n\ninterface ISanitizedHTMLProps {\n    html: string;\n    raw?: boolean;\n}\n\ninterface ISanitizedHTMLState {\n\n}","import * as React from 'react';\nimport SanitizedHTML from './SanitizedHTML';\nimport {IAlert} from '../Classes/Alerts';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport {IAppGlobals} from '../AppRouter';\n\nexport default class ShowAlerts extends React.Component<IShowAlertsProps, IShowAlertsState> {\n\n    constructor(props: IShowAlertsProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        };\n    }\n\n    dismissAlert( alertIndex: number) {\n        if( this.props.appGlobals.siteAlerts.dismissAlert( alertIndex ) ) {\n            this.setState({\n                updated: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <ul className=\"styleless\">\n                {this.props.appGlobals.siteAlerts.activeAlerts.map(\n                    (alert: IAlert, alertIndex: number) => {\n                        return <div\n                            key={alertIndex}\n                            id={\"alert-index-\" + alertIndex}\n                            className={alert.autoDismissSeconds > 0 ? \"position-relative alert-fade alert alert-\" + alert.level + \" \" + alert.extraclass : \"position-relative alert alert-\" + alert.level + \" \" + alert.extraclass}\n                            style={{\n                                display: \"block\",\n                                height: \"auto\",\n                            }}\n                        >\n\n                            {alert.autoDismissSeconds > 0 ?\n                            (\n                                <>\n                                <div className=\"alert-countdown\">\n                                    <div\n                                        id={\"alert-bar-index-\" + alertIndex}\n                                        className={\"alert-countdown-bar dismiss-time-\" + alert.autoDismissSeconds}\n                                    >\n\n                                    </div>\n                                </div>\n                                <span\n                                    onClick={() => {this.dismissAlert(alertIndex)} }\n                                    className=\"pull-right cursor-pointer\"\n                                    style={{fontSize: \"1.5rem\"}}\n                                    title={\"Click here to dismiss this alert, but it'll auto-dismiss in \" + alert.autoDismissSeconds + \" seconds\"}\n                                >\n                                    <FontAwesomeIcon icon={faTimesCircle} spin />\n                                </span>\n                                </>\n                            )\n                            :\n                            (\n                                <>\n                                    {alert.dismissable ?\n                                        (\n                                            <span\n                                                onClick={() => {this.dismissAlert(alertIndex)} }\n                                                className=\"pull-right cursor-pointer\"\n                                                style={{fontSize: \"1.5rem\"}}\n                                                title=\"Click here to dismiss this alert\"\n                                            >\n                                                <FontAwesomeIcon icon={faTimesCircle} />\n                                            </span>\n                                        ):\n                                        (\n                                            <></>\n                                        )\n                                    }\n                                </>\n                            )}\n\n                            {alert.title ? (\n                                <h4>{alert.title}</h4>\n                            ):\n                            (\n                                <></>\n                            )\n                            }\n\n                            {alert.message ? (\n                                <div className={alert.messageclass}>\n                                    <SanitizedHTML html={alert.message} />\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                            {alert.externalURL ? (\n                                <div className=\"text-right\">\n                                    <a className=\"btn btn-primary btn-sm\" href={alert.externalURL}>Go</a>\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                            {alert.link ? (\n                                <div className=\"text-right\">\n                                    <Link className=\"btn btn-primary btn-sm\" to={alert.link}>Go</Link>\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                        </div>\n                    }\n                )}\n            </ul>\n\n        )\n    }\n}\n\ninterface IShowAlertsProps {\n    appGlobals: IAppGlobals;\n}\n\ninterface IShowAlertsState {\n    updated: boolean;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './TopMenu.scss';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {IAppGlobals} from '../AppRouter';\n\nexport default class TopMenu extends React.Component<ITopMenuProps, ITopMenuState> {\n    constructor(props: ITopMenuProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n        this.toggleMobile = this.toggleMobile.bind(this);\n        this.closeMobile = this.closeMobile.bind(this);\n    }\n\n    toggleMobile() {\n        this.props.appGlobals.toggleMobile();\n    }\n    closeMobile() {\n        this.props.appGlobals.closeMobile();\n    }\n\n    render() {\n      return (\n          <>\n          <header className=\"topmenu\">\n            <ul>\n                <li onClick={this.toggleMobile} className=\"mobile-menu-button d-inline d-md-none\"><FontAwesomeIcon icon={faBars} /></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"home\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/`}>Home</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"initiative\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/initiative`}>Initiative</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"dice\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dice`}>Dice</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"about\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/about`}>About</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"settings\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/settings`}>Settings</Link></li>\n                {/*\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"dev-status\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dev-status`}>Status</Link></li>\n\n                */}\n\n            </ul>\n\n          </header>\n            <div className=\"mobile-menu\">\n                <ul className=\"styleless\">\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"home\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/`}>Home</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"initiative\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/initiative`}>Initiative</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"dice\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dice`}>Dice</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"about\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/about`}>About</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"settings\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/settings`}>Settings</Link></li>\n                    {/*\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"dev-status\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dev-status`}>Status</Link></li>\n\n                    */}\n                </ul>\n\n            </div>\n          </>\n      );\n    }\n}\n\ninterface ITopMenuProps {\n    current?: string;\n    sub?: string;\n    appGlobals: IAppGlobals;\n}\n\ninterface ITopMenuState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport ShowAlerts from './ShowAlerts';\nimport TopMenu from './TopMenu';\n\nexport default class UIPage extends React.Component<IUIPageProps, IUIPageState> {\n\n    render() {\n        return (\n        <div className={this.props.appGlobals.showMobile ? \"ui-page show-mobile\" : \"ui-page\"}>\n          <TopMenu current={this.props.current} sub={this.props.sub} appGlobals={this.props.appGlobals} />\n          <div className=\"content\">\n            <ShowAlerts appGlobals={this.props.appGlobals} />\n            {this.props.children}\n          </div>\n        </div>\n        )\n    }\n}\n\n\ninterface IUIPageProps {\n    appGlobals: IAppGlobals;\n    current?: string;\n    sub?: string;\n  }\n\n  interface IUIPageState {\n      updated: boolean;\n\n  }","import React from 'react';\nimport './Home.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Home extends React.Component<IHomeProps, IHomeState> {\n    constructor(props: IHomeProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Home\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"home\" appGlobals={this.props.appGlobals}>\n\n            This will be a collection of quick utilities to help Star Wars and Genesys games.\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IHomeProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IHomeState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Error404 extends React.Component<IError404Props, IError404State> {\n    constructor(props: IError404Props) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount () {\n      this.props.appGlobals.makeDocumentTitle(\"404 - Page not Found\");\n    }\n\n    render() {\n      return (\n        <UIPage appGlobals={this.props.appGlobals}>\n            404 - Not Found\n        </UIPage>\n      );\n    }\n}\n\ninterface IError404Props {\n  appGlobals: IAppGlobals;\n}\n\ninterface IError404State {\n    updated: boolean;\n\n}\n","import React, { ReactElement } from 'react';\nimport './NumberSelect.scss';\n\nexport default class NumberSelect extends React.Component<INumberSelectProps, INumberSelectState> {\n\n    className: string = \"\";\n    max: number = 8;\n\n    constructor(props: INumberSelectProps) {\n        super(props);\n        if( this.props.className ) {\n            this.className = this.props.className;\n        }\n        if( this.props.max ) {\n            this.max = this.props.max;\n        }\n    }\n\n    render() {\n        let numberSelectUI: ReactElement[] = [];\n\n        for( let numberSelect = 0; numberSelect < this.max; numberSelect++) {\n            numberSelectUI.push(\n                <span\n                    key={\"ns\" + numberSelect}\n                onClick={() => this.props.onChange(this.props.index, numberSelect)}\n                className={this.props.value === numberSelect ? \"selected\" : \"\"}\n            >\n                    {numberSelect}\n                </span>\n            )\n        }\n\n        return (\n            <div className=\"number-select\">\n                {numberSelectUI}\n            </div>\n        )\n    }\n}\n\n\ninterface INumberSelectProps {\n    value: number;\n    onChange(\n        indexNumber: number,\n        newValue: number\n    ): void;\n    index: number;\n    max?: number;\n    className?: string;\n  }\n\n  interface INumberSelectState {\n      updated: boolean;\n\n  }","import React, { ReactElement } from 'react';\nimport './SkillSelect.scss';\nimport { ISKillValue } from '../Pages/Initiative';\n\nexport default class SkillSelect extends React.Component<ISkillSelectProps, ISkillSelectState> {\n\n    className: string = \"\";\n    max: number = 5;\n\n    constructor(props: ISkillSelectProps) {\n        super(props);\n        if( this.props.className ) {\n            this.className = this.props.className;\n        }\n\n    }\n\n    updateProficiencyDie( newValue: number) {\n        let newValueObj = this.props.value;\n        newValueObj.skillDice = newValue;\n        this.props.onChange(this.props.index, newValueObj)\n        this.setState({\n            updated: true,\n        })\n    }\n\n    updateAbilityDie( newValue: number) {\n        let newValueObj = this.props.value;\n        newValueObj.attributeDice = newValue;\n        this.props.onChange(this.props.index, newValueObj)\n        this.setState({\n            updated: true,\n        })\n    }\n\n    render() {\n        let proficiencySelectUI: ReactElement[] = [];\n\n        for( let proficiencySelectNumber = 0; proficiencySelectNumber < this.max; proficiencySelectNumber++) {\n\n            proficiencySelectUI.push(\n                <span\n                    key={\"ps\" + proficiencySelectNumber}\n                    onClick={() => this.updateProficiencyDie(proficiencySelectNumber)}\n                    className={this.props.value.skillDice === proficiencySelectNumber ? \"selected\" : \"\"}\n                >\n                    {proficiencySelectNumber}\n                </span>\n            )\n        }\n\n        let abilitySelectUI: ReactElement[] = [];\n\n        for( let abilitySelectNumber = 0; abilitySelectNumber < this.max; abilitySelectNumber++) {\n\n            abilitySelectUI.push(\n                <span\n                    key={\"as\" + abilitySelectNumber}\n                    onClick={() => this.updateAbilityDie(abilitySelectNumber)}\n                    className={this.props.value.attributeDice === abilitySelectNumber ? \"selected\" : \"\"}\n                >\n                    {abilitySelectNumber}\n                </span>\n            )\n        }\n\n        let skillDieView: ReactElement[] = [];\n        let maxValue = 0;\n        let minValue = 0;\n        if( this.props.value.attributeDice > this.props.value.skillDice  ) {\n            maxValue =  this.props.value.attributeDice;\n            minValue =  this.props.value.skillDice;\n        } else {\n            maxValue =  this.props.value.skillDice;\n            minValue =  this.props.value.attributeDice;\n        }\n\n        for( let lCount = 0; lCount < maxValue; lCount++ ) {\n            if( lCount < minValue ) {\n                skillDieView.push(\n                    <span key={\"p\" + lCount} className=\"dice die-proficiency\">c</span>\n                )\n            } else {\n                skillDieView.push(\n                    <span key={\"a\" + lCount} className=\"dice die-ability\">c</span>\n                )\n            }\n        }\n\n        return (\n            <>\n                <label className=\"skill-select\">\n                {this.props.label}: {skillDieView}<br />\n                    <div className=\"number-select text-right\">\n                        Ability Dice: {abilitySelectUI}<br />\n                        Proficiency Dice: {proficiencySelectUI}<br />\n                    </div>\n                </label><br />\n            </>\n        )\n    }\n}\n\n\ninterface ISkillSelectProps {\n    value: ISKillValue;\n    onChange(\n        indexNumber: number,\n        newValue: ISKillValue\n    ): void;\n    index: number;\n    className?: string;\n    label: string;\n  }\n\n  interface ISkillSelectState {\n      updated: boolean;\n\n  }","export interface IDiceResults {\n    rolls: IDieResult[];\n    netSuccesses: number;\n    netAdvantages: number;\n    netFailures: number;\n    netThreats: number;\n    netTriumphs: number;\n    netDespairs: number;\n    netLightSide: number;\n    netDarkSide: number;\n    grossSuccesses: number;\n    grossAdvantages: number;\n    grossFailures: number;\n    grossThreats: number;\n    grossTriumphs: number;\n    grossDespairs: number;\n    grossLightSide: number;\n    grossDarkSide: number;\n\n    total: number;\n}\n\nexport interface IDieResult {\n    type: string;\n    title: string;\n    numSides: number;\n    rawRoll: number;\n    successes: number;\n    advantages: number;\n    failures: number;\n    threats: number;\n    triumphs: number;\n    despairs: number;\n    lightSide: number;\n    darkSide: number;\n}\n\nexport default class Dice {\n\n    private _getRandomInt(numberOfSides: number): number {\n        return Math.floor(Math.random() * Math.floor(numberOfSides));\n    }\n\n    public rollDie( numberOfSides: number = 6 ): number {\n        return this._getRandomInt( numberOfSides) + 1;\n    }\n\n    public rollFGDice(\n        ability: number = 0,\n        proficiency: number = 0,\n        boosts: number = 0,\n\n        difficulty: number = 0,\n        challlenge: number = 0,\n        setback: number = 0,\n\n        force: number = 0,\n    ): IDiceResults {\n\n        let netSuccesses: number = 0;\n        let netAdvantages: number = 0;\n        let netFailures: number = 0;\n        let netThreats: number = 0;\n        let netTriumphs: number = 0;\n        let netDespairs: number = 0;\n        let grossSuccesses: number = 0;\n        let grossAdvantages: number = 0;\n        let grossFailures: number = 0;\n        let grossThreats: number = 0;\n        let grossTriumphs: number = 0;\n        let grossDespairs: number = 0;\n\n        let netLightSide: number = 0;\n        let grossLightSide: number = 0;\n\n        let netDarkSide: number = 0;\n        let grossDarkSide: number = 0;\n\n        let rolls: IDieResult[] = [];\n\n\n        // Proficiency Dice\n        for( let dieCount = 0; dieCount < proficiency; dieCount++) {\n            let roll = this.rollDie(12);\n            let rawRoll = {\n                type: \"proficiency\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 3: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 4: {\n                    // two successes\n                    rawRoll.successes++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"Two Successes\";\n                    break;\n                }\n                case 5: {\n                    // two successes\n                    rawRoll.successes++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"Two Successes\";\n                    break;\n                }\n                case 6: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n                case 7: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, one success\";\n                    break;\n                }\n                case 8: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, one success\";\n\n                    break;\n                }\n                case 9: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, one success\";\n                    break;\n                }\n                case 10: {\n                    // two advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n                case 11: {\n                    // two advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n                case 12: {\n                    // one success and a triumph\n                    rawRoll.successes++;\n                    rawRoll.triumphs++;\n                    rawRoll.title = \"One Triumph (counts as success)\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n\n\n        // Ability Dice\n        for( let dieCount = 0; dieCount < ability; dieCount++) {\n            let roll = this.rollDie(8);\n            let rawRoll = {\n                type: \"ability\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"( nothing )\";\n                    break;\n                }\n                case 2: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 3: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 4: {\n                    // two successes\n                    rawRoll.successes++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"Two Successes\";\n                    break;\n                }\n                case 5: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n                case 6: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n                case 7: {\n                    // one advantage, one success\n                    rawRoll.advantages++;\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Advantage, One Success\";\n                    break;\n                }\n                case 8: {\n                    // one advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Boost Dice\n        for( let dieCount = 0; dieCount < boosts; dieCount++) {\n            let roll = this.rollDie(6);\n            let rawRoll = {\n                type: \"boost\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 3: {\n                    // one success\n                    rawRoll.successes++;\n                    rawRoll.title = \"One Success\";\n                    break;\n                }\n                case 4: {\n                    // one success, one advantage\n                    rawRoll.successes++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Success, One Advantage\";\n                    break;\n                }\n                case 5: {\n                    // two advantages\n                    rawRoll.advantages++;\n                    rawRoll.advantages++;\n                    rawRoll.title = \"Two Advantages\";\n                    break;\n                }\n                case 6: {\n                    // one advantage\n                    rawRoll.advantages++;\n                    rawRoll.title = \"One Advantage\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Difficulty Dice\n        for( let dieCount = 0; dieCount < difficulty; dieCount++) {\n            let roll = this.rollDie(8);\n            let rawRoll = {\n                type: \"difficulty\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 3: {\n                    // two failures\n                    rawRoll.failures++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"Two Failures\";\n                    break;\n                }\n                case 4: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 5: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 6: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 7: {\n                    // two threats\n                    rawRoll.threats++;\n                    rawRoll.threats++;\n                    rawRoll.title = \"Two Threats\";\n\n                    break;\n                }\n                case 8: {\n                    // one threat, one failure\n                    rawRoll.threats++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Threat, One Failure\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Setback Dice\n        for( let dieCount = 0; dieCount < setback; dieCount++) {\n            let roll = this.rollDie(6);\n            let rawRoll = {\n                type: \"setback\",\n                title: \"\",\n                numSides: 8,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 3: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 4: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 5: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 6: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // Challenge Dice\n        for( let dieCount = 0; dieCount < challlenge; dieCount++) {\n            let roll = this.rollDie(12);\n            let rawRoll = {\n                type: \"challenge\",\n                title: \"\",\n                numSides: 12,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // Do nothing, blank side\n                    rawRoll.title = \"(nothing)\";\n                    break;\n                }\n                case 2: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 3: {\n                    // one failure\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Failure\";\n                    break;\n                }\n                case 4: {\n                    // two failures\n                    rawRoll.failures++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"Two Failures\";\n                    break;\n                }\n                case 5: {\n                    // two failures\n                    rawRoll.failures++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"Two Failures\";\n                    break;\n                }\n                case 6: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 7: {\n                    // one threat\n                    rawRoll.threats++;\n                    rawRoll.title = \"One Threat\";\n                    break;\n                }\n                case 8: {\n                    // one threat, one failure\n                    rawRoll.threats++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Threat, One Failure\";\n                    break;\n                }\n                case 9: {\n                    // one threat, one failure\n                    rawRoll.threats++;\n                    rawRoll.failures++;\n                    rawRoll.title = \"One Threat, One Failure\";\n                    break;\n                }\n                case 10: {\n                    // two threats\n                    rawRoll.threats++;\n                    rawRoll.threats++;\n                    rawRoll.title = \"Two Threats\";\n                    break;\n                }\n                case 11: {\n                    // two threats\n                    rawRoll.threats++;\n                    rawRoll.threats++;\n                    rawRoll.title = \"Two Threats\";\n                    break;\n                }\n                case 12: {\n                    // one failure and a despair\n                    rawRoll.failures++;\n                    rawRoll.despairs++;\n                    rawRoll.title = \"One Despair (counts as failure)\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n\n        // Force Dice\n        for( let dieCount = 0; dieCount < force; dieCount++) {\n            let roll = this.rollDie(12);\n            let rawRoll = {\n                type: \"force\",\n                title: \"\",\n                numSides: 12,\n                rawRoll: roll,\n                successes: 0,\n                advantages: 0,\n                failures: 0,\n                threats: 0,\n                triumphs: 0,\n                despairs: 0,\n                lightSide: 0,\n                darkSide: 0,\n            }\n            switch( roll ) {\n                case 1: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    break;\n                }\n                case 2: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 3: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 4: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 5: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 6: {\n                    // one dark side\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"One Dark Side Point\";\n                    break;\n                }\n                case 7: {\n                    // two dark side\n                    rawRoll.darkSide++;\n                    rawRoll.darkSide++;\n                    rawRoll.title = \"Two Dark Side Points\";\n\n                    break;\n                }\n                case 8: {\n                    // one light side\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"One Light Side Point\";\n                    break;\n                }\n                case 9: {\n                    // one light side\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"One Light Side Point\";\n                    break;\n                }\n                case 10: {\n                    // two light side\n                    rawRoll.lightSide++;\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"Two Light Side Points\";\n                    break;\n                }\n                case 11: {\n                    // two light side\n                    rawRoll.lightSide++;\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"Two Light Side Points\";\n                    break;\n                }\n                case 12: {\n                    // two light side\n                    rawRoll.lightSide++;\n                    rawRoll.lightSide++;\n                    rawRoll.title = \"Two Light Side Points\";\n                    break;\n                }\n            }\n            rolls.push( rawRoll );\n        }\n\n        // TODO Calculate gross values...\n        for( let roll of rolls ) {\n            netSuccesses += roll.successes;\n            netAdvantages += roll.advantages;\n            netFailures += roll.failures;\n            netThreats += roll.threats;\n            netDespairs += roll.despairs;\n            netTriumphs += roll.triumphs;\n\n            netLightSide += roll.lightSide;\n            netDarkSide += roll.darkSide;\n        }\n\n        if( netSuccesses > netFailures ) {\n            grossSuccesses = netSuccesses - netFailures;\n        } else {\n            grossFailures = netFailures - netSuccesses;\n        }\n\n        if( netThreats > netAdvantages ) {\n            grossThreats = netThreats - netAdvantages;\n        } else {\n            grossAdvantages = netAdvantages - netThreats;\n        }\n\n        if( netDespairs > netTriumphs ) {\n            grossDespairs = netDespairs - netTriumphs;\n        } else {\n            grossTriumphs = netTriumphs - netDespairs;\n        }\n\n        // if( netDarkSide > netLightSide ) {\n            grossDarkSide = netDarkSide; // - netLightSide;\n        // } else {\n            grossLightSide = netLightSide; // - netDarkSide;\n        // }\n\n        return {\n            rolls: rolls,\n            netSuccesses: netSuccesses,\n            netAdvantages: netAdvantages,\n            netFailures: netFailures,\n            netThreats: netThreats,\n            netTriumphs: netTriumphs,\n            netDespairs: netDespairs,\n            grossSuccesses: grossSuccesses,\n            grossAdvantages: grossAdvantages,\n            grossFailures: grossFailures,\n            grossThreats: grossThreats,\n            grossTriumphs: grossTriumphs,\n            grossDespairs: grossDespairs,\n\n            grossDarkSide: grossDarkSide,\n            grossLightSide: grossLightSide,\n            netLightSide: netLightSide,\n            netDarkSide: netDarkSide,\n\n            total: 0,\n        }\n    }\n}","import React, { ReactElement } from 'react';\nimport './Initiative.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\nimport { Button, Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faAngleDoubleLeft, faAngleDoubleRight, faCog, faDice } from '@fortawesome/free-solid-svg-icons';\nimport NumberSelect from '../Components/NumberSelect';\nimport SkillSelect from '../Components/SkillSelect';\nimport Dice from '../Classes/Dice';\n\nexport default class Initiative extends React.Component<IInitiativeProps, IInitiativeState> {\n    numPCs = 4;\n    numNPCs = 2;\n\n    currentInitiative = -1;\n\n    initMap: IInitMapItem[] = [];\n    constructor(props: IInitiativeProps) {\n        super(props);\n\n        const lsNumPCs = localStorage.getItem(\"numPCs\");\n        const lsInitMap = localStorage.getItem(\"initMap\");\n        const lsCurrentInitiative = localStorage.getItem(\"currentInitiative\");\n        const lsHideControls = localStorage.getItem(\"hideControls\");\n\n        let hideControls = false;\n        if( lsHideControls && +lsHideControls > 0 ) {\n          hideControls = true;\n        }\n\n        const lsHideRolls = localStorage.getItem(\"hideRolls\");\n\n        let hideRolls = false;\n        if( lsHideRolls && +lsHideRolls > 0 ) {\n          hideRolls = true;\n        }\n        this.state = {\n            updated: false,\n            editItem: null,\n            editItemIndex: -1,\n            hideControls: hideControls,\n            hideRolls: hideRolls,\n        };\n\n        if( lsCurrentInitiative ) {\n          this.currentInitiative = +lsCurrentInitiative;\n\n          if( Number.isNaN(this.currentInitiative) ) {\n            this.currentInitiative = -1;\n          }\n        }\n\n        if( lsNumPCs ) {\n          this.numPCs = +lsNumPCs;\n        }\n\n\n        if( lsInitMap ) {\n          this.initMap = JSON.parse( lsInitMap );\n        } else {\n          // Init PC Map\n          for( let count = 0; count < this.numPCs; count++) {\n            this.initMap.push( {\n              label: \"PC\",\n              successes: 0,\n              advantages: 0,\n              triumphs: 0,\n              npc: false,\n              skillCool: {\n                skillDice: 0,\n                attributeDice: 0,\n              },\n              skillVigilance: {\n                skillDice: 0,\n                attributeDice: 0,\n              },\n            });\n          }\n        }\n\n        for( let item of this.initMap ) {\n          if(!item.skillCool) {\n            item.skillCool = {\n              skillDice: 0,\n              attributeDice: 0,\n            }\n          }\n\n          if(!item.skillVigilance) {\n            item.skillVigilance = {\n              skillDice: 0,\n              attributeDice: 0,\n            }\n          }\n\n          if(!item.skillCool.attributeDice) {\n            item.skillCool.attributeDice = 0\n            \n          }\n\n          if(!item.skillVigilance.attributeDice) {\n            item.skillVigilance.attributeDice = 0\n            \n          }\n        }\n\n        this.updateInitSuccesses = this.updateInitSuccesses.bind(this);\n        this.updateInitAdvantages = this.updateInitAdvantages.bind(this);\n        this.updateInitTriumphs = this.updateInitTriumphs.bind(this);\n        this.updateNumPCs = this.updateNumPCs.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.sortInit = this.sortInit.bind(this);\n\n        this.initForward = this.initForward.bind(this);\n        this.initBackward = this.initBackward.bind(this);\n\n        this.removeSlot = this.removeSlot.bind(this);\n\n        this.handleClose = this.handleClose.bind(this);\n        this.editSlot = this.editSlot.bind(this);\n\n        this.updateCoolValue = this.updateCoolValue.bind(this);\n        this.updateVigilanceValue = this.updateVigilanceValue.bind(this);\n\n        this.rollVigilance = this.rollVigilance.bind(this);\n        this.rollCool = this.rollCool.bind(this);\n        this.updateNPC = this.updateNPC.bind(this);\n        this.toggleHideControls = this.toggleHideControls.bind(this);\n        this.toggleHideRolls = this.toggleHideRolls.bind(this);\n    }\n\n    toggleHideRolls() {\n      let hideRolls = !this.state.hideRolls;\n\n      if( hideRolls ) {\n          localStorage.setItem(\"hideRolls\", \"1\");\n      } else {\n          localStorage.setItem(\"hideRolls\", \"0\");\n      }\n      this.setState({\n        hideRolls: hideRolls,\n      })\n    }\n\n    toggleHideControls() {\n      let hideControls = !this.state.hideControls;\n\n      if( hideControls ) {\n          localStorage.setItem(\"hideControls\", \"1\");\n      } else {\n          localStorage.setItem(\"hideControls\", \"0\");\n      }\n      this.setState({\n        hideControls: hideControls,\n      })\n    }\n\n    updateNPC( event: React.FormEvent<HTMLInputElement> ) {\n      if( this.state.editItem && this.state.editItemIndex < this.initMap.length ) {\n        this.initMap[ this.state.editItemIndex].npc = event.currentTarget.checked;\n        // this.state.editItem.npc = event.currentTarget.checked;\n        if( event.currentTarget.checked ) {\n          this.initMap[ this.state.editItemIndex].label = \"NPC\";\n          // this.state.editItem.label = \"NPC\";\n        } else {\n          this.initMap[ this.state.editItemIndex].label = \"PC\";\n          // this.state.editItem.label = \"PC\";\n        }\n        this.setState({\n          updated: true,\n        })\n        localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n      }\n\n    }\n    rollCool(\n      indexNumber: number,\n    ): void {\n      if( indexNumber < this.initMap.length && this.initMap[indexNumber]) {\n        let diceRoll = new Dice();\n        let dieResults = diceRoll.rollFGDice(\n          this.getattributeDice( this.initMap[indexNumber].skillCool), // ability: number = 0,\n          this.getProcidiencyDice( this.initMap[indexNumber].skillCool),// proficiency: number = 0,\n        );\n\n        this.initMap[indexNumber].triumphs = dieResults.netTriumphs;\n        this.initMap[indexNumber].successes = dieResults.netSuccesses;\n        this.initMap[indexNumber].advantages = dieResults.netAdvantages;\n        this.setState({\n          updated: true,\n        });\n        localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n      }\n\n    }\n\n    rollVigilance(\n      indexNumber: number,\n    ): void {\n      if( indexNumber < this.initMap.length && this.initMap[indexNumber]) {\n        let diceRoll = new Dice();\n        let dieResults = diceRoll.rollFGDice(\n          this.getattributeDice( this.initMap[indexNumber].skillVigilance), // ability: number = 0,\n          this.getProcidiencyDice( this.initMap[indexNumber].skillVigilance),// proficiency: number = 0,\n        );\n\n        this.initMap[indexNumber].triumphs = dieResults.netTriumphs;\n        this.initMap[indexNumber].successes = dieResults.netSuccesses;\n        this.initMap[indexNumber].advantages = dieResults.netAdvantages;\n        this.setState({\n          updated: true,\n        })\n        localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n      }\n    }\n\n    getattributeDice( skill: ISKillValue ): number {\n      let maxValue = 0;\n      let minValue = 0;\n      if( skill.attributeDice > skill.skillDice  ) {\n          maxValue =  skill.attributeDice;\n          minValue =  skill.skillDice;\n      } else {\n          maxValue =  skill.skillDice;\n          minValue =  skill.attributeDice;\n      }\n      return (maxValue - minValue);\n    }\n\n    getProcidiencyDice( skill: ISKillValue ): number {\n      let minValue = 0;\n      if( skill.attributeDice > skill.skillDice  ) {\n          minValue =  skill.skillDice;\n      } else {\n          minValue =  skill.attributeDice;\n      }\n\n      return minValue;\n    }\n\n    updateCoolValue(\n      indexNumber: number,\n      newValue: ISKillValue\n    ): void {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].skillCool = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateVigilanceValue(\n      indexNumber: number,\n      newValue: ISKillValue\n    ): void {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].skillVigilance = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    editSlot( editItem: IInitMapItem, editItemIndex: number ) {\n      this.setState({\n        editItem: editItem,\n        editItemIndex: editItemIndex,\n      })\n    }\n\n    initForward() {\n      let init = this.currentInitiative + 1;\n      if( init > this.initMap.length - 1 ) {\n        init = 0;\n      }\n\n      this.currentInitiative = init;\n      localStorage.setItem(\"currentInitiative\", init.toString() );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    initBackward() {\n      let init = this.currentInitiative - 1;\n      if( init < 0 ) {\n        init = this.initMap.length;\n      }\n\n      this.currentInitiative = init;\n      localStorage.setItem(\"currentInitiative\", init.toString() );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    sortInit() {\n      this.initMap.sort( (a, b) => {\n        if( a.successes < b.successes ) {\n          return 1;\n        } else if( a.successes > b.successes ) {\n          return -1;\n        } else {\n          if( a.advantages < b.advantages ) {\n            return 1;\n          } else if( a.advantages > b.advantages ) {\n            return -1;\n          } else {\n            if( a.label === \"PC\" && b.label === \"NPC\" ) {\n              return -1;\n            } else if( a.label === \"NPC\" && b.label === \"PC\" ) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }\n        }\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n\n    addItem() {\n      this.initMap.push( {\n        label: \"PC\",\n        successes: 0,\n        advantages: 0,\n        triumphs: 0,\n        npc: false,\n        skillCool: {\n          skillDice: 0,\n          attributeDice: 0,\n        },\n        skillVigilance: {\n          skillDice: 0,\n          attributeDice: 0,\n        },\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n\n      this.setState({\n        updated: true,\n        editItem: this.initMap[ this.initMap.length - 1],\n        editItemIndex: this.initMap.length - 1,\n      })\n    }\n\n    removeSlot( indexNumber: number ) {\n\n      if( this.initMap.length > indexNumber) {\n        this.initMap.splice( indexNumber, 1);\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitAdvantages(\n      indexNumber: number,\n      newValue: number\n    ): void {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].advantages = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitTriumphs(\n      indexNumber: number,\n      newValue: number\n    ): void {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].triumphs = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitSuccesses(\n      indexNumber: number,\n      newValue: number\n    ): void {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].successes = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateNumPCs( event: React.FormEvent<HTMLSelectElement>) {\n\n      this.numPCs = +event.currentTarget.value;\n      localStorage.setItem(\"numPCs\", event.currentTarget.value);\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    handleClose() {\n      this.setState({\n        editItem: null,\n      })\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Initiative\");\n    }\n\n    render() {\n      let success = \"s\";\n      let advantage = \"a\";\n      let triumph = \"t\";\n\n\n      if( this.props.appGlobals.settings.dieIconClass === \"starwars\") {\n          success = \"s\";\n          advantage = \"a\";\n          triumph = \"x\";\n      }\n\n      return (\n        <UIPage current=\"initiative\" appGlobals={this.props.appGlobals}>\n            <Modal onHide={this.handleClose} show={this.state.editItem != null}>\n              <Modal.Header closeButton >\n                {this.state.editItem && this.state.editItem.npc ? (\n                  <>NPC Edit</>\n                ) : (\n                  <>PC Edit</>\n                )}\n              </Modal.Header>\n              <Modal.Body>\n              {this.state.editItem ? (\n                <div className=\"form\">\n                  <label>\n                    NPC:&nbsp;\n                    <input\n                      type=\"checkbox\"\n                      checked={this.state.editItem.npc}\n                      onChange={this.updateNPC}\n                    />\n                  </label><br />\n                  <label>\n                    Successes:&nbsp;\n                    <NumberSelect\n                      value={this.state.editItem.successes}\n                      max={8}\n                      index={this.state.editItemIndex}\n                      onChange={this.updateInitSuccesses}\n                    />\n                  </label><br />\n                  <label>\n                    Advantages:&nbsp;\n                    <NumberSelect\n                      value={this.state.editItem.advantages}\n                      max={8}\n                      index={this.state.editItemIndex}\n                      onChange={this.updateInitAdvantages}\n                    />\n                  </label><br />\n                  <label>\n                    Triumphs:&nbsp;\n                    <NumberSelect\n                      value={this.state.editItem.triumphs}\n                      max={8}\n                      index={this.state.editItemIndex}\n                      onChange={this.updateInitTriumphs}\n                    />\n                  </label><br />\n                  <hr />\n                  <SkillSelect\n                      value={this.state.editItem.skillCool}\n                      index={this.state.editItemIndex}\n                      onChange={this.updateCoolValue}\n                      label=\"Cool\"\n                  />\n                  <SkillSelect\n                    value={this.state.editItem.skillVigilance}\n                    index={this.state.editItemIndex}\n                    onChange={this.updateVigilanceValue}\n                    label=\"Vigilance\"\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"primary\"\n                  onClick={this.handleClose}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n\n            </Modal>\n            <div className=\"text-center control-bar\">\n              <div className=\"text-left\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.initBackward}\n                  tabIndex={0}\n                  title=\"Move to the last initiative\"\n                >\n                  <FontAwesomeIcon icon={faAngleDoubleLeft} />\n                </Button>\n              </div>\n\n{!this.state.hideControls ? (\n  <>\n              <div className=\"\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.addItem}\n                  tabIndex={1}\n                  title=\"Add a PC\"\n                >\n                  Add\n                </Button>\n              </div>\n\n              <div className=\"\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.sortInit}\n                  tabIndex={2}\n                  title=\"Sort\"\n                >\n                  Sort\n                </Button>\n              </div>\n  </>\n) : (\n  <></>\n)}\n              <div className=\"grow text-right\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.initForward}\n                  tabIndex={4}\n                  title=\"Move to the next initiative\"\n                >\n                  Next Turn\n                  &nbsp;<FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\n                </Button>\n              </div>\n            </div>\n\n          <div className=\"text-center\">\n              <label>\n                <input \n                  type=\"checkbox\"\n                  checked={this.state.hideControls}\n                  onChange={this.toggleHideControls}\n                />&nbsp;Hide Edit Controls\n              </label>\n              &nbsp;|&nbsp;\n              <label>\n                <input \n                  type=\"checkbox\"\n                  checked={this.state.hideRolls}\n                  onChange={this.toggleHideRolls}\n                />&nbsp;Hide Rolls\n              </label>              \n          </div>\n\n          <div className=\"init-labels\">\n          {this.initMap.map( (mapItem, mapIndex ) => {\n            let dieResults: ReactElement[] = [];\n\n            for( let successCount = 0; successCount < mapItem.successes; successCount++ ) {\n              dieResults.push(\n                <span title=\"Success\" key={\"s\" + successCount} className={this.props.appGlobals.settings.dieIconClass + \" icon-single\"}>{success}</span>\n              )\n            }\n\n            for( let successCount = 0; successCount < mapItem.advantages; successCount++ ) {\n              dieResults.push(\n                <span title=\"Advantage\" key={\"a\" + successCount} className={this.props.appGlobals.settings.dieIconClass + \" icon-single\"}>{advantage}</span>\n              )\n            }\n\n            for( let successCount = 0; successCount < mapItem.triumphs; successCount++ ) {\n              dieResults.push(\n                <span title=\"Triumph\" key={\"t\" + successCount} className={this.props.appGlobals.settings.dieIconClass + \" icon-single\"}>{triumph}</span>\n              )\n            }\n\n            let skillCoolDieView: ReactElement[] = [];\n            let maxValue = 0;\n            let minValue = 0;\n            if( mapItem.skillCool.attributeDice > mapItem.skillCool.skillDice  ) {\n                maxValue =  mapItem.skillCool.attributeDice;\n                minValue =  mapItem.skillCool.skillDice;\n            } else {\n                maxValue =  mapItem.skillCool.skillDice;\n                minValue =  mapItem.skillCool.attributeDice;\n            }\n\n            for( let lCount = 0; lCount < maxValue; lCount++ ) {\n                if( lCount < minValue ) {\n                  skillCoolDieView.push(\n                        <span key={lCount} className=\"dice die-proficiency\">c</span>\n                    )\n                } else {\n                  skillCoolDieView.push(\n                        <span key={lCount} className=\"dice die-ability\">c</span>\n                    )\n                }\n            }\n\n            let skillVigilanceDieView: ReactElement[] = [];\n            maxValue = 0;\n            minValue = 0;\n            if( mapItem.skillVigilance.attributeDice > mapItem.skillVigilance.skillDice  ) {\n                maxValue =  mapItem.skillVigilance.attributeDice;\n                minValue =  mapItem.skillVigilance.skillDice;\n            } else {\n                maxValue =  mapItem.skillVigilance.skillDice;\n                minValue =  mapItem.skillVigilance.attributeDice;\n            }\n\n            for( let lCount = 0; lCount < maxValue; lCount++ ) {\n                if( lCount < minValue ) {\n                  skillVigilanceDieView.push(\n                        <span key={lCount} className=\"dice die-proficiency\">c</span>\n                    )\n                } else {\n                  skillVigilanceDieView.push(\n                        <span key={lCount} className=\"dice die-ability\">c</span>\n                    )\n                }\n            }\n\n            return (\n              <div className={mapIndex === this.currentInitiative ? \"init-map-item current\" : \"init-map-item\"} key={mapIndex}>\n                <div className={mapItem.npc ? \"label npc\" : \"label pc\"}>\n                  <div className=\"name-results\">\n                    {mapItem.label}<br />\n{!this.state.hideRolls || !this.state.hideControls ? (\n<>\n  &nbsp;{dieResults}\n</>\n) : (\n  <>\n  </>\n)}\n                    \n                  </div>\n                    {\n                      !this.state.hideControls && (\n                      mapItem.skillCool.attributeDice > 0\n                      || mapItem.skillCool.skillDice > 0\n                      || mapItem.skillVigilance.attributeDice > 0\n                      || mapItem.skillVigilance.skillDice > 0\n                      )\n                    ? (\n                      <>\n                      <div className=\"skill-values\">\n                        <table>\n                          <tbody>\n                            <tr>\n                              <td className=\"text-right\">\n\n                                Cool:<br />\n                                <Button\n                                  variant=\"primary\"\n                                  onClick={() => this.rollCool( mapIndex )}\n                                  className=\"btn-xs\"\n                                >\n                                  <FontAwesomeIcon icon={faDice} />\n                                </Button>&nbsp;\n                              </td>\n                              <td className=\"text-left\">{skillCoolDieView}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"text-right\">\n\n                                Vigilance:<br />\n                                <Button\n                                  variant=\"primary\"\n                                  onClick={() => this.rollVigilance( mapIndex )}\n                                  className=\"btn-xs\"\n                                >\n                                  <FontAwesomeIcon icon={faDice} />\n                                </Button>&nbsp;\n                              </td>\n                              <td className=\"text-right\">{skillVigilanceDieView}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </>\n                    ) : (\n                      <></>\n                    )\n                  }\n\n\n                </div>\n\n                <div className=\"controls\">\n                {!this.state.hideControls ? (\n                  <>\n                <Button\n                    variant=\"primary\"\n                    // tabIndex={mapIndex + this.initMap.length + 5}\n                    onClick={() => this.editSlot(mapItem, mapIndex)}\n                    title=\"Edit this initiative slot\"\n                  >\n                    <FontAwesomeIcon icon={faCog} />\n                </Button>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                  <Button\n                    variant=\"primary\"\n                    tabIndex={mapIndex + this.initMap.length + 5}\n                    onClick={() => this.removeSlot(mapIndex)}\n                    title=\"Remove this initiative slot\"\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </Button>\n                </div>\n              </div>\n            )\n          })}\n          </div>\n        </UIPage>\n      );\n    }\n}\n\n\ninterface IInitMapItem {\n  label: string;\n  successes: number;\n  advantages: number;\n  triumphs: number;\n  npc: boolean;\n  skillVigilance: ISKillValue;\n  skillCool: ISKillValue;\n}\n\nexport interface ISKillValue {\n  attributeDice: number;\n  skillDice: number;\n}\n\ninterface IInitiativeProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IInitiativeState {\n    updated: boolean;\n    editItem: IInitMapItem | null;\n    editItemIndex: number;\n    hideControls: boolean;\n    hideRolls: boolean;\n}","import App from \"../AppRouter\";\n\nexport interface IAlert {\n    level: string;\n    title: string;\n    message: string;\n    messageclass: string;\n    externalURL: string;\n    link: string;\n    dismissable: boolean;\n    extraclass: string;\n    autoDismissSeconds: number;\n    dismissFunction: Function | null,\n}\n\nexport default class Alerts {\n\n    _app: App;\n\n    activeAlerts: IAlert[] = []\n\n    cancelTimeout: number = -1;\n\n    constructor( mainApp: App ) {\n        this._app = mainApp;\n        this.activeAlerts = [];\n    }\n\n    dismissAlert( alertIndex: number ): boolean {\n        if( this.cancelTimeout > -1 ) {\n            window.clearTimeout( this.cancelTimeout );\n        }\n        let alertID = document.getElementById(\"alert-index-\" + alertIndex);\n        if( alertID ) {\n            alertID.style.height = \"0px\";\n            alertID.style.paddingTop = \"0px\";\n            alertID.style.paddingBottom = \"0px\";\n            alertID.style.borderTop = \"0px\";\n            alertID.style.borderBottom = \"0px\";\n        }\n\n        if( this.activeAlerts.length > alertIndex ) {\n            if( this.activeAlerts[alertIndex].dismissable) {\n\n                window.setTimeout(\n                    () => {\n                        let dismissFunction: Function | null = null;\n                        if(  this.activeAlerts[alertIndex].dismissFunction ) {\n                            dismissFunction = this.activeAlerts[alertIndex].dismissFunction;\n                        }\n\n                        this.activeAlerts.splice( alertIndex, 1);\n\n                        if( dismissFunction ) {\n                            dismissFunction();\n                        }\n\n                        this._app.refreshGlobalState();\n                    },\n                    100\n                );\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    addAlert(\n        level: string,\n        title: string,\n        message: string,\n        messageclass: string = \"\",\n        dismissable: boolean = true,\n        dismissFunction: Function | null,\n        autoDismissSeconds: number = 0,\n        externalURL: string = \"\",\n        link: string = \"\",\n        extraclass: string = \"\",\n    ) {\n        this.activeAlerts.push(\n            {\n                level: level,\n                title: title,\n                message: message,\n                messageclass: messageclass,\n                externalURL: externalURL,\n                link: link,\n                dismissable: dismissable,\n                extraclass: extraclass,\n                autoDismissSeconds: autoDismissSeconds,\n                dismissFunction: dismissFunction,\n            }\n        );\n\n        let dismissIndex = this.activeAlerts.length - 1;\n        this._app.refreshGlobalState();\n        if( autoDismissSeconds > 0 ) {\n            window.setTimeout(\n                () => {\n                    let alertID = document.getElementById(\"alert-index-\" + dismissIndex);\n                    if( alertID ) {\n                        alertID.className = alertID.className + 'fade-away';\n                    }\n                },\n                (autoDismissSeconds * 1000) - 250\n\n            );\n            window.setTimeout(\n                () => {\n                    let alertID = document.getElementById(\"alert-bar-index-\" + dismissIndex);\n                    if( alertID ) {\n                        alertID.style.width = \"0px\";\n                    }\n                },\n                100\n\n            );\n            this.cancelTimeout = window.setTimeout(\n                () => {\n                    this.activeAlerts.splice(dismissIndex, 1);\n                    if( dismissFunction ) {\n                        dismissFunction();\n                    }\n\n                    this._app.refreshGlobalState();\n                },\n                autoDismissSeconds * 1000\n            );\n        }\n    }\n}\n","export const CONFIGSiteTitle = \"FFG Star Wars/Genesys Helpers\";","import React from 'react';\nimport './About.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class About extends React.Component<IAboutProps, IAboutState> {\n    constructor(props: IAboutProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"About\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"about\" appGlobals={this.props.appGlobals}>\n\n          <p>Genesys and its logo, and Genesys Foundry and its logo, are trademarks of Fantasy Flight Games in the U.S.A. and other countries. All Fantasy Flight Games characters and character names, and the distinctive likenesses thereof, are trademarks of Fantasy Flight Games. <a href=\"http://www.FantasyFlightGames.com\">www.FantasyFlightGames.com</a>.</p>\n\n          <p>All other original material in this work is copyright 2019 by Jeffrey Gordon and published under the GPL. </p>\n\n          <p>Star Wars and its logo are owned by Lucasfilm/Disney.</p>\n\n          <p>Die icons are owned by Fantasy Flight Games and/or Lucasfilm/Disney.</p>\n          <hr />\n\n          <p className=\"text-center\">This project is licensed under the GPL and you can contribute to the source at <a href=\"https://github.com/jdgwf/ffg-sw-genesys-helpers\">its GitHub repository.</a></p>\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IAboutProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IAboutState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Settings extends React.Component<ISettingsProps, ISettingsState> {\n    constructor(props: ISettingsProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n\n        this.setUITheme = this.setUITheme.bind(this);\n        this.setDieIconClass = this.setDieIconClass.bind(this);\n    }\n\n    setUITheme( event: React.FormEvent<HTMLSelectElement>) {\n      let settings = this.props.appGlobals.settings;\n      settings.uiTheme = event.currentTarget.value;\n      this.props.appGlobals.saveSettings( settings );\n    }\n\n    setDieIconClass( event: React.FormEvent<HTMLSelectElement>) {\n      let settings = this.props.appGlobals.settings;\n      settings.dieIconClass = event.currentTarget.value;\n      localStorage.setItem(\"forceDice\", \"0\");\n      this.props.appGlobals.saveSettings( settings );\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Settings\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"settings\" appGlobals={this.props.appGlobals}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <fieldset className=\"fieldset\">\n                  <legend>User Interface</legend>\n                  {/* <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={this.props.appGlobals.settings.uiDesaturated}\n                      onChange={this.toggleDesaturated}\n                    />&nbsp;Desaturated UI\n                  </label> */}\n                  <select\n                      value={this.props.appGlobals.settings.uiTheme}\n                      onChange={this.setUITheme}\n                  >\n                    <option value=\"\">Default</option>\n                    <option value=\"desaturated\">Desaturated</option>\n                    <option value=\"retro\">Retro</option>\n                  </select>\n                </fieldset>\n\n                <fieldset className=\"fieldset\">\n                  <legend>Die Icons</legend>\n                  {/* <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={this.props.appGlobals.settings.uiDesaturated}\n                      onChange={this.toggleDesaturated}\n                    />&nbsp;Desaturated UI\n                  </label> */}\n                  <select\n                      value={this.props.appGlobals.settings.dieIconClass}\n                      onChange={this.setDieIconClass}\n                  >\n                    <option value=\"\">Genesys</option>\n                    <option value=\"starwars\">Star Wars</option>\n                  </select>\n                </fieldset>\n              </div>\n              {/* <div className=\"col-md-6\">\n                <fieldset className=\"fieldset\">\n                  <legend>Data Syncing </legend>\n                    (TODO: sync settings/logins)\n                  </fieldset>\n              </div> */}\n            </div>\n\n        </UIPage>\n      );\n    }\n}\n\ninterface ISettingsProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface ISettingsState {\n    updated: boolean;\n\n}","import React from 'react';\n// import './Temp.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Temp extends React.Component<ITempProps, ITempState> {\n    constructor(props: ITempProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Temp\");\n    }\n\n    render() {\n\n      return (\n        <UIPage current=\"Temp\" appGlobals={this.props.appGlobals}>\n\n          <p className=\"text-box\">\n            <span className='symbols'>a</span> = Advantage<br />\n            <span className='symbols'>h</span> = Threat<br />\n            <span className='symbols'>f</span> = Failure<br />\n            <span className='symbols'>s</span> = Success<br />\n            <span className='symbols'>t</span> = Triumph<br />\n            <span className='symbols'>d</span> = Despair<br />\n            <span className='die-setback'>b</span> = Setback Dice<br />\n            <span className='die-boost'>b</span> = Boost Dice<br />\n            <span className='die-difficulty'>d</span> = Difficulty Dice<br />\n            <span className='die-ability'>d</span> = Ability Dice<br />\n            <span className='die-challenge'>c</span> = Challenge Dice<br />\n            <span className='die-proficiency'>c</span> = Proficiency Dice <br />\n          </p>\n          <p>Star Wars<br />\n            <span className='dice'>s</span> = Success<br />\n            <span className='dice'>a</span> = Advantage<br />\n            <span className='dice'>x</span> = Triumph<br />\n            <br />\n            <span className='dice'>f</span> = Failure<br />\n            <span className='dice'>t</span> = Threat<br />\n            <span className='dice'>y</span> = Despair<br />\n\n            <span className='dice'>z</span> = Dark Side<br />\n            <span className='dice'>Z</span> = Light Side<br />\n          </p>\n        </UIPage>\n      );\n    }\n}\n\ninterface ITempProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface ITempState {\n    updated: boolean;\n\n}","import React from 'react';\nimport { IDieResult } from '../Classes/Dice';\nimport { IAppGlobals } from '../AppRouter';\nimport './Die.scss';\n\nexport default class Die extends React.Component<IDieProps, {}> {\n\n    className: string = \"\";\n\n    constructor(props: IDieProps) {\n        super(props);\n        if( this.props.className ) {\n            this.className = this.props.className;\n        }\n    }\n\n    render() {\n        let success = \"s\";\n        let advantage = \"a\";\n        let triumph = \"t\";\n\n        let failure = \"f\";\n        let threat= \"h\";\n        let despair = \"d\";\n\n        let darkSide = \"\";\n        let lightSide = \"\";\n\n        if( this.props.appGlobals.settings.dieIconClass === \"starwars\") {\n            success = \"s\";\n            advantage = \"a\";\n            triumph = \"x\";\n\n            failure = \"f\";\n            threat= \"t\";\n            despair = \"y\";\n\n            darkSide = \"z\";\n            lightSide = \"Z\";\n        }\n\n        return (\n            <>\n            <div\n                className={\"die die-\" + this.props.dieResult.type + \" \" + this.className}\n                title={this.props.dieResult.title + \" (raw #\" + this.props.dieResult.rawRoll + \")\" }\n            >\n\n                <div className=\"die-bg\">\n                    {this.props.dieResult.type === \"setback\" ? (\n                        <span className=\"setback\">b</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"boost\" ? (\n                        <span className=\"boost\">b</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"difficulty\" ? (\n                        <span className=\"difficulty\">d</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"ability\" ? (\n                        <span className=\"ability\">d</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"challenge\" ? (\n                        <span className=\"challenge\">c</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"proficiency\" ? (\n                        <span className=\"proficiency\">c</span>\n                    ) : (\n                        <></>\n                    )}\n                    {this.props.dieResult.type === \"force\" ? (\n                        <span className=\"force\">c</span>\n                    ) : (\n                        <></>\n                    )}\n                </div>\n                <div className={\"die-face \" + this.props.appGlobals.settings.dieIconClass }>\n                    {this.props.dieResult.triumphs === 1 ?\n                    (\n                        <span className=\"icon-single\">{triumph}</span>\n                    ) : (\n                        <>\n                            {this.props.dieResult.despairs === 1 ?\n                            (\n                              <span className=\"icon-single\">{despair}</span>\n                            ) : (\n                                <>\n                                    {this.props.dieResult.successes === 1 ? (\n                                        <>\n                                        {this.props.dieResult.advantages === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{success}</span>\n                                                <span className=\"icon-2\">{advantage}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{success}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.successes === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{success}</span>\n                                            <span className=\"icon-2\">{success}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.advantages === 1 ? (\n                                        <>\n                                        {this.props.dieResult.successes === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{success}</span>\n                                                <span className=\"icon-2\">{advantage}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{advantage}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.advantages === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{advantage}</span>\n                                            <span className=\"icon-2\">{advantage}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.failures === 1 ? (\n                                        <>\n                                        {this.props.dieResult.threats === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{failure}</span>\n                                                <span className=\"icon-2\">{threat}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{failure}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.failures === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{failure}</span>\n                                            <span className=\"icon-2\">{failure}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.threats === 1 ? (\n                                        <>\n                                        {this.props.dieResult.failures === 1 ? (\n                                            <>\n                                                <span className=\"icon-1\">{failure}</span>\n                                                <span className=\"icon-2\">{threat}</span>\n                                            </>\n                                        ) : (\n                                            <span className=\"icon-single\">{threat}</span>\n                                        )}\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.threats === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{threat}</span>\n                                            <span className=\"icon-2\">{threat}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n\n                                    {this.props.dieResult.darkSide === 1 ? (\n                                        <>\n                                            <span className=\"icon-single\">{darkSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.darkSide === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{darkSide}</span>\n                                            <span className=\"icon-2\">{darkSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.lightSide === 1 ? (\n                                        <>\n                                            <span className=\"icon-single\">{lightSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    {this.props.dieResult.lightSide === 2 ? (\n                                        <>\n                                            <span className=\"icon-1\">{lightSide}</span>\n                                            <span className=\"icon-2\">{lightSide}</span>\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n\n                </div>\n\n                <div className=\"raw-roll\">{\"#\" + this.props.dieResult.rawRoll}</div>\n            </div>\n            </>\n        )\n    }\n}\n\n\ninterface IDieProps {\n    appGlobals: IAppGlobals;\n    dieResult: IDieResult;\n    className?: string;\n}\n\n","import React from 'react';\nimport './Dice.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\nimport Dice, { IDiceResults } from '../Classes/Dice';\nimport Die from '../Components/Die';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n\nexport default class DicePage extends React.Component<IDiceProps, IDiceState> {\n    dieRolls: IDiceResults | null = null;\n    diceObj = new Dice();\n    constructor(props: IDiceProps) {\n        super(props);\n\n        let abilityDice = 3;\n        let proficiencyDice = 1;\n        let boostsDice = 0;\n        let difficultyDice = 2;\n        let challengeDice = 0;\n        let setbackDice = 0;\n        let forceDice = 0;\n\n        let abilityDiceLS = localStorage.getItem(\"abilityDice\");\n        if( abilityDiceLS ) {\n          abilityDice = +abilityDiceLS;\n        }\n\n        let proficiencyDiceLS = localStorage.getItem(\"proficiencyDice\");\n        if( proficiencyDiceLS ) {\n          proficiencyDice = +proficiencyDiceLS;\n        }\n\n        let boostsDiceLS = localStorage.getItem(\"boostsDice\");\n        if( boostsDiceLS ) {\n          boostsDice = +boostsDiceLS;\n        }\n\n        let difficultyDiceLS = localStorage.getItem(\"difficultyDice\");\n        if( difficultyDiceLS ) {\n          difficultyDice = +difficultyDiceLS;\n        }\n\n        let challengeDiceLS = localStorage.getItem(\"challengeDice\");\n        if( challengeDiceLS ) {\n          challengeDice = +challengeDiceLS;\n        }\n\n        let setbackDiceLS = localStorage.getItem(\"setbackDice\");\n        if( setbackDiceLS ) {\n          setbackDice = +setbackDiceLS;\n        }\n\n        let forceDiceLS = localStorage.getItem(\"forceDice\");\n        if( forceDiceLS ) {\n          forceDice = +forceDiceLS;\n        }\n\n        this.state = {\n            updated: false,\n\n            abilityDice: abilityDice,\n            proficiencyDice: proficiencyDice,\n            boostsDice: boostsDice,\n            difficultyDice: difficultyDice,\n            challengeDice: challengeDice,\n            setbackDice: setbackDice,\n            forceDice: forceDice,\n        }\n\n        this.rollDice = this.rollDice.bind(this);\n\n        this.rollDice();\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Dice\");\n    }\n\n    rollDice() {\n      this.dieRolls = this.diceObj.rollFGDice(\n        this.state.abilityDice, // ability\n        this.state.proficiencyDice, // proficiency\n        this.state.boostsDice, // boosts\n\n        this.state.difficultyDice, // difficulty\n        this.state.challengeDice, // challenge\n        this.state.setbackDice, // setback\n\n        this.state.forceDice, // force\n      );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    incrementDie(dieType: string, incrementCount: number = 1) {\n      switch( dieType.toLowerCase().trim() ) {\n        case \"ability\": {\n          let newValue = this.state.abilityDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"abilityDice\", (newValue).toString())\n          this.setState({\n            abilityDice: newValue,\n          })\n          break;\n        }\n\n        case \"proficiency\": {\n          let newValue = this.state.proficiencyDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"proficiencyDice\", (newValue).toString())\n          this.setState({\n            proficiencyDice: newValue,\n          })\n          break;\n        }\n\n        case \"setback\": {\n          let newValue = this.state.setbackDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"setbackDice\", (newValue).toString())\n          this.setState({\n            setbackDice: newValue,\n          })\n          break;\n        }\n\n        case \"difficulty\": {\n          let newValue = this.state.difficultyDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"difficultyDice\", (newValue).toString())\n          this.setState({\n            difficultyDice: newValue,\n          })\n          break;\n        }\n\n        case \"force\": {\n          let newValue = this.state.forceDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"forceDice\", (newValue).toString())\n          this.setState({\n            forceDice: newValue,\n          })\n          break;\n        }\n\n        case \"boost\": {\n          let newValue = this.state.boostsDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"boostsDice\", (newValue).toString())\n          this.setState({\n            boostsDice: newValue,\n          })\n          break;\n        }\n\n        case \"challenge\": {\n          let newValue = this.state.challengeDice + incrementCount;\n          if( newValue < 0 ) {\n            newValue = 0;\n          }\n          localStorage.setItem(\"challengeDice\", (newValue).toString())\n          this.setState({\n            challengeDice: newValue,\n          })\n          break;\n        }\n      }\n    }\n\n    render() {\n      return (\n        <UIPage current=\"dice\" appGlobals={this.props.appGlobals}>\n\n        <div className=\"dice-select-container\">\n\n        <div className=\"text-center dice-select\">\n              <span className=\"title\">Proficiency</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-proficiency\">c</span>&nbsp;x{this.state.proficiencyDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"proficiency\", -1)}\n                disabled={this.state.proficiencyDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"proficiency\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n          <div className=\"text-center dice-select\">\n              <span className=\"title\">Ability</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-ability\">d</span>&nbsp;x{this.state.abilityDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"ability\", -1)}\n                disabled={this.state.abilityDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"ability\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n\n          <div className=\"text-center dice-select\">\n              <span className=\"title\">Boost</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-boost\">b</span>&nbsp;x{this.state.boostsDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"boost\", -1)}\n                disabled={this.state.boostsDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"boost\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n          <div className=\"text-center dice-select\">\n            <span className=\"title\">Setback</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-setback\">b</span>&nbsp;x{this.state.setbackDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"setback\", -1)}\n                disabled={this.state.setbackDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"setback\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n\n          <div className=\"text-center dice-select\">\n              <span className=\"title\">Difficulty</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-difficulty\">d</span>&nbsp;x{this.state.difficultyDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"difficulty\", -1)}\n                disabled={this.state.difficultyDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"difficulty\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n          <div className=\"text-center dice-select\">\n            <span className=\"title\">Challenge</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-challenge\">c</span>&nbsp;x{this.state.challengeDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"challenge\", -1)}\n                disabled={this.state.challengeDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"challenge\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n\n{this.props.appGlobals.settings.dieIconClass === \"starwars\" ? (\n  <>\n          <div className=\"text-center dice-select\">\n            <span className=\"title\">Force</span>\n              <span className=\"bigger-font\">\n                <span className=\"dice die-force\">c</span>&nbsp;x{this.state.forceDice}<br />\n              </span>\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"force\", -1)}\n                disabled={this.state.forceDice < 1}\n              >\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              &nbsp;\n\n              <Button\n                variant=\"primary\"\n                className=\"btn-xs\"\n                onClick={() => this.incrementDie(\"force\", 1)}\n              >\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n          </div>\n  </>\n) :\n(\n  <></>\n)}\n\n\n        </div>\n        <div className=\"text-center\">\n          <Button\n            variant=\"primary\"\n            onClick={this.rollDice}\n          >Roll</Button>\n        </div>\n\n        {this.dieRolls ? (\n          <>\n          <div className=\"die-box text-center\">\n            {this.dieRolls.rolls.map( (result, resultIndex) => {\n              return (\n                <>\n                <Die\n                  key={resultIndex}\n                  appGlobals={this.props.appGlobals}\n                  dieResult={result}\n                  className=\"\"\n                />\n                </>\n              )\n            })}\n            <p>\n\n              {this.dieRolls.grossSuccesses !== 0 ? (\n                <>\n                Successes: {this.dieRolls.grossSuccesses}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossAdvantages !== 0 ? (\n                <>\n                  Advantages: {this.dieRolls.grossAdvantages}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossFailures !== 0 ? (\n                <>\n                  Failures: {this.dieRolls.grossFailures}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossThreats !== 0 ? (\n                <>\n                  Threats: {this.dieRolls.grossThreats}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n\n              {this.dieRolls.grossTriumphs !== 0 ? (\n                <>\n                  Triumphs: {this.dieRolls.grossTriumphs}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossDespairs !== 0 ? (\n                <>\n                  Despairs: {this.dieRolls.grossDespairs}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossLightSide !== 0 ? (\n                <>\n                  Light Side: {this.dieRolls.grossLightSide}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n\n              {this.dieRolls.grossDarkSide !== 0 ? (\n                <>\n                  Dark Side: {this.dieRolls.grossDarkSide}<br />\n                </>\n              ) :\n              (\n                <></>\n              )}\n            </p>\n          </div>\n          </>\n        ) : (\n          <></>\n        )}\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IDiceProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IDiceState {\n    updated: boolean;\n\n    abilityDice: number;\n    proficiencyDice: number;\n    boostsDice: number;\n    difficultyDice: number;\n    challengeDice: number;\n    setbackDice: number;\n    forceDice: number;\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Error404 from \"./Pages/Error404\";\nimport Initiative from \"./Pages/Initiative\";\nimport Alerts from './Classes/Alerts';\nimport { Modal, Button } from 'react-bootstrap';\nimport SanitizedHTML from \"./Components/SanitizedHTML\";\nimport { CONFIGSiteTitle } from \"./config\";\nimport About from \"./Pages/About\";\nimport Settings from \"./Pages/Settings\";\nimport Temp from \"./Pages/Temp\";\nimport Dice from \"./Pages/Dice\";\n\n\n\nexport default class AppRouter extends React.Component<IAppRouterProps, IAppRouterState> {\n\n    constructor(props: IAppRouterProps) {\n        super(props);\n\n        this.makeDocumentTitle = this.makeDocumentTitle.bind(this);\n        this.openConfirmDialog = this.openConfirmDialog.bind(this);\n        this.closeConfirmDialog = this.closeConfirmDialog.bind(this);\n        this.confirmConfirmDialog = this.confirmConfirmDialog.bind(this);\n        this.refreshGlobalState = this.refreshGlobalState.bind(this);\n        this.toggleMobile = this.toggleMobile.bind(this);\n        this.closeMobile = this.closeMobile.bind(this);\n        this.saveSettings = this.saveSettings.bind(this);\n\n        let uiTheme: string = \"\";\n        let lsTheme = localStorage.getItem(\"uiTheme\");\n        if( lsTheme ) {\n            uiTheme = lsTheme;\n            document.body.className = uiTheme;\n        } else {\n            document.body.className = '';\n        }\n\n\n        let dieIconClass: string = \"genesys\";\n        let lsDieIconClass = localStorage.getItem(\"dieIconClass\");\n        if( lsDieIconClass ) {\n            dieIconClass = lsDieIconClass;\n        }\n\n        this.state = {\n            updated: false,\n            appGlobals: {\n                settings: {\n                    uiTheme: uiTheme,\n                    dieIconClass: dieIconClass,\n                },\n                currentPageTitle: \"\",\n                siteAlerts: new Alerts( this ),\n                showMobile: false,\n                confirmDialogMessage: \"\",\n                confirmDialogTitle: \"\",\n                confirmDialogYesLabel: \"\",\n                confirmDialogNoLabel: \"\",\n                showConfirmDialog: false,\n                confirmDialogConfirm: null,\n                makeDocumentTitle: this.makeDocumentTitle,\n                openConfirmDialog: this.openConfirmDialog,\n                refreshGlobalState: this.refreshGlobalState,\n                toggleMobile: this.toggleMobile,\n                closeMobile: this.closeMobile,\n\n                saveSettings: this.saveSettings,\n            }\n        }\n\n    }\n\n    saveSettings( settings: ISettings ): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.settings = settings;\n        this.setState({\n            appGlobals: appGlobals,\n        });\n\n        if( settings.uiTheme.trim() ) {\n            document.body.className = settings.uiTheme;\n        } else {\n            document.body.className = '';\n        }\n\n        localStorage.setItem(\"uiTheme\", settings.uiTheme);\n        localStorage.setItem(\"dieIconClass\", settings.dieIconClass);\n    }\n\n    toggleMobile(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showMobile = !appGlobals.showMobile;\n        this.setState({\n            appGlobals: appGlobals,\n            updated: true,\n        })\n    }\n\n    closeMobile(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showMobile = false;\n        this.setState({\n            appGlobals: appGlobals,\n            updated: true,\n        })\n    }\n\n    makeDocumentTitle( subTitle: string = \"\" ): void {\n        let appGlobals = this.state.appGlobals;\n        if( subTitle ) {\n            document.title = subTitle + \" | \" + CONFIGSiteTitle;\n            appGlobals.currentPageTitle = subTitle;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        } else {\n            document.title = CONFIGSiteTitle;\n            appGlobals.currentPageTitle = subTitle;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        }\n    }\n\n    refreshGlobalState(appGlobals: IAppGlobals | null = null): void {\n        if( !appGlobals ) {\n            this.setState({\n                updated: true,\n            });\n        } else {\n            this.setState({\n                updated: true,\n                appGlobals: appGlobals,\n            });\n        }\n    }\n\n    closeConfirmDialog(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showConfirmDialog = false;\n        this.setState({\n            appGlobals: appGlobals,\n        })\n    }\n\n    confirmConfirmDialog(): void {\n        if( this.state.appGlobals ) {\n            if( this.state.appGlobals.confirmDialogConfirm ) {\n                this.state.appGlobals.confirmDialogConfirm();\n            }\n            let appGlobals = this.state.appGlobals;\n            appGlobals.showConfirmDialog = false;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        }\n    }\n\n    openConfirmDialog(\n        confirmTitle: string,\n        confirmMessage: string,\n        confirmYesLabel: string,\n        confirmNoLabel: string,\n        confirmCallback: Function,\n    ): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.confirmDialogMessage = confirmMessage;\n        appGlobals.confirmDialogTitle = confirmTitle;\n        appGlobals.confirmDialogYesLabel = confirmYesLabel;\n        appGlobals.confirmDialogNoLabel = confirmNoLabel;\n        appGlobals.showConfirmDialog = true;\n        appGlobals.confirmDialogConfirm = confirmCallback;\n        this.setState({\n            appGlobals: appGlobals,\n        })\n    }\n\n\n    render() {\n        return (\n            <Router>\n            <Modal show={this.state.appGlobals.showConfirmDialog} onHide={this.closeConfirmDialog}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                            {this.state.appGlobals.confirmDialogTitle}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"form\">\n                        <div>\n                            <SanitizedHTML html={this.state.appGlobals.confirmDialogMessage} />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n\n                    <Button variant=\"secondary\" onClick={this.closeConfirmDialog}>\n                        {this.state.appGlobals.confirmDialogNoLabel}\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.confirmConfirmDialog}>\n                        {this.state.appGlobals.confirmDialogYesLabel}\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n            <Switch>\n                <Route path={`${process.env.PUBLIC_URL}/`} exact>\n                    <Home\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n\n                <Route path={`${process.env.PUBLIC_URL}/initiative`} exact>\n                    <Initiative\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/about`} exact>\n                    <About\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/temp`} exact>\n                    <Temp\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/dice`} exact>\n                    <Dice\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/settings`} exact>\n                    <Settings\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route>\n                    <Error404\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n\n            </Switch>\n            </Router>\n        );\n    }\n}\n\ninterface IAppRouterProps {\n\n}\n\ninterface ISettings {\n    uiTheme: string;\n    dieIconClass: string;\n}\n\ninterface IAppRouterState {\n    appGlobals: IAppGlobals;\n    updated: boolean;\n}\n\nexport interface IAppGlobals {\n    currentPageTitle: string;\n    siteAlerts: Alerts;\n    settings: ISettings;\n    showMobile: boolean;\n    confirmDialogMessage: string;\n    confirmDialogTitle: string;\n    confirmDialogYesLabel: string;\n    confirmDialogNoLabel: string;\n    showConfirmDialog: boolean;\n    confirmDialogConfirm: Function | null;\n    refreshGlobalState(appGlobals: IAppGlobals | null): void;\n\n    makeDocumentTitle( subTitle: string ): void;\n\n    toggleMobile(): void;\n    closeMobile(): void;\n\n    openConfirmDialog(\n        confirmTitle: string,\n        confirmMessage: string,\n        confirmYesLabel: string,\n        confirmNoLabel: string,\n        confirmCallback: Function,\n    ): void;\n\n\n    saveSettings( settings: ISettings ): void;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './AppRouter';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your Home to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}