{"version":3,"sources":["serviceWorker.ts","Components/SanitizedHTML.tsx","Components/ShowAlerts.tsx","Components/TopMenu.tsx","Components/UIPage.tsx","Pages/Home.tsx","Pages/Error404.tsx","Pages/Initiative.tsx","Classes/Alerts.ts","config.ts","Pages/About.tsx","Pages/Settings.tsx","AppRouter.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","sanitizeHtml","require","SanitizedHTML","props","state","this","raw","dangerouslySetInnerHTML","__html","html","allowedTags","allowedAttributes","React","ShowAlerts","updated","alertIndex","appGlobals","siteAlerts","dismissAlert","setState","className","activeAlerts","map","alert","key","id","autoDismissSeconds","level","extraclass","style","display","height","onClick","fontSize","title","icon","faTimesCircle","spin","dismissable","message","messageclass","externalURL","href","link","to","TopMenu","toggleMobile","bind","closeMobile","faBars","current","process","Component","UIPage","showMobile","sub","children","Home","makeDocumentTitle","Error404","Initiative","numPCs","numNPCs","currentInitiative","initMap","lsNumPCs","localStorage","getItem","lsInitMap","lsCurrentInitiative","Number","isNaN","JSON","parse","count","push","label","successes","advantages","updateInitSuccesses","updateInitAdvantages","updateNumPCs","addNPC","addPC","sortInit","initForward","initBackward","removeSlot","init","length","setItem","toString","sort","a","b","stringify","indexNumber","splice","newValue","event","currentTarget","value","Button","variant","tabIndex","faAngleDoubleLeft","faAngleDoubleRight","mapItem","mapIndex","onChange","faTrash","Alerts","mainApp","_app","cancelTimeout","clearTimeout","alertID","document","getElementById","paddingTop","paddingBottom","borderTop","borderBottom","setTimeout","dismissFunction","refreshGlobalState","dismissIndex","width","CONFIGSiteTitle","About","Settings","setUITheme","settings","uiTheme","saveSettings","AppRouter","openConfirmDialog","closeConfirmDialog","confirmConfirmDialog","lsTheme","body","currentPageTitle","confirmDialogMessage","confirmDialogTitle","confirmDialogYesLabel","confirmDialogNoLabel","showConfirmDialog","confirmDialogConfirm","trim","subTitle","confirmTitle","confirmMessage","confirmYesLabel","confirmNoLabel","confirmCallback","Modal","show","onHide","Header","closeButton","Title","Body","Footer","path","exact","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cbae66c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\n// import * as sanitizeHtml from 'sanitize-html';\nvar sanitizeHtml = require('sanitize-html');\n\nexport default class SanitizedHTML extends React.Component<ISanitizedHTMLProps, ISanitizedHTMLState> {\n\n    constructor(props: ISanitizedHTMLProps) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    async componentWillMount() {\n\n    }\n\n    // For the SanitizeHTML function/module docs go here:\n    // https://www.npmjs.com/package/sanitize-html\n\n    render() {\n\n        if( this.props.raw ) {\n            return (\n                <span\n                    dangerouslySetInnerHTML={\n                        {\n                            __html: this.props.html\n                        }\n                    }\n                ></span>\n            )\n        } else {\n            return (\n                <span\n                    dangerouslySetInnerHTML={\n                        {\n                            __html: sanitizeHtml(\n                                this.props.html,\n                                {\n                                    allowedTags: [\n                                        \"h1\",\n                                        \"h2\",\n                                        \"h3\",\n                                        \"h4\",\n\n                                        \"svg\",\n\n                                        \"div\",\n                                        \"span\",\n                                        \"p\",\n\n                                        \"ol\",\n                                        \"ul\",\n                                        \"li\",\n\n                                        \"img\",\n\n                                        \"sup\",\n\n                                        \"strong\",\n                                        \"em\",\n\n                                        \"br\",\n                                        \"hr\"\n                                    ],\n                                    allowedAttributes: {\n                                        'div': [ 'class', 'id' ],\n                                        'span': [ 'class', 'id' ],\n                                        'p': [ 'class', 'id' ],\n                                        'img': ['src', 'class', 'id', 'style'],\n                                        'ul': [ 'class', 'id' ],\n                                    },\n                                }\n                            )\n                        }\n                    }\n                />\n            )\n        }\n    }\n}\n\ninterface ISanitizedHTMLProps {\n    html: string;\n    raw?: boolean;\n}\n\ninterface ISanitizedHTMLState {\n\n}","import * as React from 'react';\nimport SanitizedHTML from './SanitizedHTML';\nimport {IAlert} from '../Classes/Alerts';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport {IAppGlobals} from '../AppRouter';\n\nexport default class ShowAlerts extends React.Component<IShowAlertsProps, IShowAlertsState> {\n\n    constructor(props: IShowAlertsProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        };\n    }\n\n    dismissAlert( alertIndex: number) {\n        if( this.props.appGlobals.siteAlerts.dismissAlert( alertIndex ) ) {\n            this.setState({\n                updated: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <ul className=\"styleless\">\n                {this.props.appGlobals.siteAlerts.activeAlerts.map(\n                    (alert: IAlert, alertIndex: number) => {\n                        return <div\n                            key={alertIndex}\n                            id={\"alert-index-\" + alertIndex}\n                            className={alert.autoDismissSeconds > 0 ? \"position-relative alert-fade alert alert-\" + alert.level + \" \" + alert.extraclass : \"position-relative alert alert-\" + alert.level + \" \" + alert.extraclass}\n                            style={{\n                                display: \"block\",\n                                height: \"auto\",\n                            }}\n                        >\n\n                            {alert.autoDismissSeconds > 0 ?\n                            (\n                                <>\n                                <div className=\"alert-countdown\">\n                                    <div\n                                        id={\"alert-bar-index-\" + alertIndex}\n                                        className={\"alert-countdown-bar dismiss-time-\" + alert.autoDismissSeconds}\n                                    >\n\n                                    </div>\n                                </div>\n                                <span\n                                    onClick={() => {this.dismissAlert(alertIndex)} }\n                                    className=\"pull-right cursor-pointer\"\n                                    style={{fontSize: \"1.5rem\"}}\n                                    title={\"Click here to dismiss this alert, but it'll auto-dismiss in \" + alert.autoDismissSeconds + \" seconds\"}\n                                >\n                                    <FontAwesomeIcon icon={faTimesCircle} spin />\n                                </span>\n                                </>\n                            )\n                            :\n                            (\n                                <>\n                                    {alert.dismissable ?\n                                        (\n                                            <span\n                                                onClick={() => {this.dismissAlert(alertIndex)} }\n                                                className=\"pull-right cursor-pointer\"\n                                                style={{fontSize: \"1.5rem\"}}\n                                                title=\"Click here to dismiss this alert\"\n                                            >\n                                                <FontAwesomeIcon icon={faTimesCircle} />\n                                            </span>\n                                        ):\n                                        (\n                                            <></>\n                                        )\n                                    }\n                                </>\n                            )}\n\n                            {alert.title ? (\n                                <h4>{alert.title}</h4>\n                            ):\n                            (\n                                <></>\n                            )\n                            }\n\n                            {alert.message ? (\n                                <div className={alert.messageclass}>\n                                    <SanitizedHTML html={alert.message} />\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                            {alert.externalURL ? (\n                                <div className=\"text-right\">\n                                    <a className=\"btn btn-primary btn-sm\" href={alert.externalURL}>Go</a>\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                            {alert.link ? (\n                                <div className=\"text-right\">\n                                    <Link className=\"btn btn-primary btn-sm\" to={alert.link}>Go</Link>\n                                </div>\n                            ):\n                            (\n                             <></>\n                            )}\n                        </div>\n                    }\n                )}\n            </ul>\n\n        )\n    }\n}\n\ninterface IShowAlertsProps {\n    appGlobals: IAppGlobals;\n}\n\ninterface IShowAlertsState {\n    updated: boolean;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './TopMenu.scss';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {IAppGlobals} from '../AppRouter';\n\nexport default class TopMenu extends React.Component<ITopMenuProps, ITopMenuState> {\n    constructor(props: ITopMenuProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n        this.toggleMobile = this.toggleMobile.bind(this);\n        this.closeMobile = this.closeMobile.bind(this);\n    }\n\n    toggleMobile() {\n        this.props.appGlobals.toggleMobile();\n    }\n    closeMobile() {\n        this.props.appGlobals.closeMobile();\n    }\n\n    render() {\n      return (\n          <>\n          <header className=\"topmenu\">\n            <ul>\n                <li onClick={this.toggleMobile} className=\"mobile-menu-button d-inline d-md-none\"><FontAwesomeIcon icon={faBars} /></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"home\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/`}>Home</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"initiative\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/initiative`}>Initiative</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"about\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/about`}>About</Link></li>\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"settings\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/settings`}>Settings</Link></li>\n                {/*\n                <li className=\"d-none d-md-inline\"><Link className={this.props.current === \"dev-status\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dev-status`}>Status</Link></li>\n\n                */}\n\n            </ul>\n\n          </header>\n            <div className=\"mobile-menu\">\n                <ul className=\"styleless\">\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"home\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/`}>Home</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"initiative\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/initiative`}>Initiative</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"about\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/about`}>About</Link></li>\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"settings\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/settings`}>Settings</Link></li>\n                    {/*\n                    <li><Link onClick={this.closeMobile} className={this.props.current === \"dev-status\" ? \"current\" : \"\" } to={`${process.env.PUBLIC_URL}/dev-status`}>Status</Link></li>\n\n                    */}\n                </ul>\n\n            </div>\n          </>\n      );\n    }\n}\n\ninterface ITopMenuProps {\n    current?: string;\n    sub?: string;\n    appGlobals: IAppGlobals;\n}\n\ninterface ITopMenuState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport ShowAlerts from './ShowAlerts';\nimport TopMenu from './TopMenu';\n\nexport default class UIPage extends React.Component<IUIPageProps, IUIPageState> {\n\n    render() {\n        return (\n        <div className={this.props.appGlobals.showMobile ? \"ui-page show-mobile\" : \"ui-page\"}>\n          <TopMenu current={this.props.current} sub={this.props.sub} appGlobals={this.props.appGlobals} />\n          <div className=\"content\">\n            <ShowAlerts appGlobals={this.props.appGlobals} />\n            {this.props.children}\n          </div>\n        </div>\n        )\n    }\n}\n\n\ninterface IUIPageProps {\n    appGlobals: IAppGlobals;\n    current?: string;\n    sub?: string;\n  }\n\n  interface IUIPageState {\n      updated: boolean;\n\n  }","import React from 'react';\nimport './Home.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Home extends React.Component<IHomeProps, IHomeState> {\n    constructor(props: IHomeProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Home\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"home\" appGlobals={this.props.appGlobals}>\n\n            This will be a collection of quick utilities to help Star Wars and Genesys games.\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IHomeProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IHomeState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Error404 extends React.Component<IError404Props, IError404State> {\n    constructor(props: IError404Props) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount () {\n      this.props.appGlobals.makeDocumentTitle(\"404 - Page not Found\");\n    }\n\n    render() {\n      return (\n        <UIPage appGlobals={this.props.appGlobals}>\n            404 - Not Found\n        </UIPage>\n      );\n    }\n}\n\ninterface IError404Props {\n  appGlobals: IAppGlobals;\n}\n\ninterface IError404State {\n    updated: boolean;\n\n}\n","import React from 'react';\nimport './Initiative.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faAngleDoubleLeft, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Initiative extends React.Component<IInitiativeProps, IInitiativeState> {\n    numPCs = 4;\n    numNPCs = 2;\n\n    currentInitiative = -1;\n\n    initMap: IInitMapItem[] = [];\n    constructor(props: IInitiativeProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n\n        const lsNumPCs = localStorage.getItem(\"numPCs\");\n        const lsInitMap = localStorage.getItem(\"initMap\");\n        const lsCurrentInitiative = localStorage.getItem(\"currentInitiative\");\n\n        if( lsCurrentInitiative ) {\n          this.currentInitiative = +lsCurrentInitiative;\n\n          if( Number.isNaN(this.currentInitiative) ) {\n            this.currentInitiative = -1;\n          }\n        }\n\n        if( lsNumPCs ) {\n          this.numPCs = +lsNumPCs;\n        }\n\n\n        if( lsInitMap ) {\n          this.initMap = JSON.parse( lsInitMap );\n        } else {\n          // Init PC Map\n          for( let count = 0; count < this.numPCs; count++) {\n            this.initMap.push( {\n              label: \"PC\",\n              successes: 0,\n              advantages: 0,\n            });\n          }\n        }\n\n        this.updateInitSuccesses = this.updateInitSuccesses.bind(this);\n        this.updateInitAdvantages = this.updateInitAdvantages.bind(this);\n        this.updateNumPCs = this.updateNumPCs.bind(this);\n        this.addNPC = this.addNPC.bind(this);\n        this.addPC = this.addPC.bind(this);\n        this.sortInit = this.sortInit.bind(this);\n\n        this.initForward = this.initForward.bind(this);\n        this.initBackward = this.initBackward.bind(this);\n\n        this.removeSlot = this.removeSlot.bind(this);\n    }\n\n    initForward() {\n      let init = this.currentInitiative + 1;\n      if( init > this.initMap.length - 1 ) {\n        init = 0;\n      }\n\n      this.currentInitiative = init;\n      localStorage.setItem(\"currentInitiative\", init.toString() );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    initBackward() {\n      let init = this.currentInitiative - 1;\n      if( init < 0 ) {\n        init = this.initMap.length;\n      }\n\n      this.currentInitiative = init;\n      localStorage.setItem(\"currentInitiative\", init.toString() );\n      this.setState({\n        updated: true,\n      })\n    }\n\n    sortInit() {\n      this.initMap.sort( (a, b) => {\n        if( a.successes < b.successes ) {\n          return 1;\n        } else if( a.successes > b.successes ) {\n          return -1;\n        } else {\n          if( a.advantages < b.advantages ) {\n            return 1;\n          } else if( a.advantages > b.advantages ) {\n            return -1;\n          } else {\n            if( a.label === \"PC\" && b.label === \"NPC\" ) {\n              return -1;\n            } else if( a.label === \"NPC\" && b.label === \"PC\" ) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }\n        }\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    addNPC() {\n      this.initMap.push( {\n        label: \"NPC\",\n        successes: 0,\n        advantages: 0,\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    addPC() {\n      this.initMap.push( {\n        label: \"PC\",\n        successes: 0,\n        advantages: 0,\n      });\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    removeSlot( indexNumber: number ) {\n\n      if( this.initMap.length > indexNumber) {\n        this.initMap.splice( indexNumber, 1);\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitAdvantages(\n      indexNumber: number,\n      newValue: number\n    ) {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].advantages = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateInitSuccesses(\n      indexNumber: number,\n      newValue: number\n    ) {\n      if( this.initMap.length > indexNumber ) {\n        this.initMap[indexNumber].successes = newValue;\n      }\n\n      localStorage.setItem(\"initMap\", JSON.stringify( this.initMap) );\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    updateNumPCs( event: React.FormEvent<HTMLSelectElement>) {\n\n      this.numPCs = +event.currentTarget.value;\n      localStorage.setItem(\"numPCs\", event.currentTarget.value);\n\n      this.setState({\n        updated: true,\n      })\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Initiative\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"initiative\" appGlobals={this.props.appGlobals}>\n            <div className=\"text-center control-bar\">\n              <div className=\"text-left grow\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.initBackward}\n                  tabIndex={0}\n                  title=\"Move to the last initiative\"\n                >\n                  <FontAwesomeIcon icon={faAngleDoubleLeft} />\n                </Button>\n              </div>\n              <div className=\"\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.addPC}\n                  tabIndex={1}\n                  title=\"Add a PC\"\n                >\n                  Add PC\n                </Button>\n              </div>\n              <div className=\"grow\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.sortInit}\n                  tabIndex={2}\n                  title=\"Sort by Success, Advantages, then PC vs NPC\"\n                >\n                  Sort\n                </Button>\n              </div>\n              <div className=\"\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.addNPC}\n                  tabIndex={3}\n                  title=\"Add an NPC\"\n                >\n                  Add NPC\n                </Button>\n              </div>\n\n              <div className=\"grow text-right\">\n                <Button\n                  variant=\"primary\"\n                  onClick={this.initForward}\n                  tabIndex={4}\n                  title=\"Move to the next initiative\"\n                >\n                  <FontAwesomeIcon icon={faAngleDoubleRight} />\n                </Button>\n              </div>\n            </div>\n\n          {this.initMap.map( (mapItem, mapIndex ) => {\n            return (\n              <div className={mapIndex === this.currentInitiative ? \"init-map-item current\" : \"init-map-item\"} key={mapIndex}>\n                <div className={mapItem.label === \"PC\" ? \"label pc\" : \"label npc\"}>\n                  {mapItem.label}\n                </div>\n                <div className=\"successes\">\n                <label>\n\n                    {/* <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={mapItem.successes}\n                      size={3}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLInputElement>) => this.updateInitSuccesses( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                    /> */}\n                    <select\n                      value={mapItem.successes}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLSelectElement>) => this.updateInitSuccesses( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                    >\n                      <option value={0}>0</option>\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                    </select>\n                    <span>Successes</span>\n                  </label>\n                </div>\n                <div className=\"advantages\">\n                  <label>\n\n                    {/* <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={mapItem.advantages}\n                      size={2}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLInputElement>) => this.updateInitAdvantages( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                    /> */}\n                    <select\n                      value={mapItem.advantages}\n                      className=\"text-center\"\n                      onChange={(event: React.FormEvent<HTMLSelectElement>) => this.updateInitAdvantages( mapIndex, +event.currentTarget.value)}\n                      tabIndex={mapIndex + 5}\n                    >\n                      <option value={0}>0</option>\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                    </select>\n                    <span>Advantages</span>\n                  </label>\n                </div>\n                <div className=\"controls\">\n                  <Button\n                    variant=\"primary\"\n                    tabIndex={mapIndex + this.initMap.length + 5}\n                    onClick={() => this.removeSlot(mapIndex)}\n                    title=\"Remove this initiative slot\"\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </Button>\n                </div>\n              </div>\n            )\n          })}\n        </UIPage>\n      );\n    }\n}\n\ninterface IInitMapItem {\n  label: string;\n  successes: number;\n  advantages: number;\n}\n\ninterface IInitiativeProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IInitiativeState {\n    updated: boolean;\n\n}","import App from \"../AppRouter\";\n\nexport interface IAlert {\n    level: string;\n    title: string;\n    message: string;\n    messageclass: string;\n    externalURL: string;\n    link: string;\n    dismissable: boolean;\n    extraclass: string;\n    autoDismissSeconds: number;\n    dismissFunction: Function | null,\n}\n\nexport default class Alerts {\n\n    _app: App;\n\n    activeAlerts: IAlert[] = []\n\n    cancelTimeout: number = -1;\n\n    constructor( mainApp: App ) {\n        this._app = mainApp;\n        this.activeAlerts = [];\n    }\n\n    dismissAlert( alertIndex: number ): boolean {\n        if( this.cancelTimeout > -1 ) {\n            window.clearTimeout( this.cancelTimeout );\n        }\n        let alertID = document.getElementById(\"alert-index-\" + alertIndex);\n        if( alertID ) {\n            alertID.style.height = \"0px\";\n            alertID.style.paddingTop = \"0px\";\n            alertID.style.paddingBottom = \"0px\";\n            alertID.style.borderTop = \"0px\";\n            alertID.style.borderBottom = \"0px\";\n        }\n\n        if( this.activeAlerts.length > alertIndex ) {\n            if( this.activeAlerts[alertIndex].dismissable) {\n\n                window.setTimeout(\n                    () => {\n                        let dismissFunction: Function | null = null;\n                        if(  this.activeAlerts[alertIndex].dismissFunction ) {\n                            dismissFunction = this.activeAlerts[alertIndex].dismissFunction;\n                        }\n\n                        this.activeAlerts.splice( alertIndex, 1);\n\n                        if( dismissFunction ) {\n                            dismissFunction();\n                        }\n\n                        this._app.refreshGlobalState();\n                    },\n                    100\n                );\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    addAlert(\n        level: string,\n        title: string,\n        message: string,\n        messageclass: string = \"\",\n        dismissable: boolean = true,\n        dismissFunction: Function | null,\n        autoDismissSeconds: number = 0,\n        externalURL: string = \"\",\n        link: string = \"\",\n        extraclass: string = \"\",\n    ) {\n        this.activeAlerts.push(\n            {\n                level: level,\n                title: title,\n                message: message,\n                messageclass: messageclass,\n                externalURL: externalURL,\n                link: link,\n                dismissable: dismissable,\n                extraclass: extraclass,\n                autoDismissSeconds: autoDismissSeconds,\n                dismissFunction: dismissFunction,\n            }\n        );\n\n        let dismissIndex = this.activeAlerts.length - 1;\n        this._app.refreshGlobalState();\n        if( autoDismissSeconds > 0 ) {\n            window.setTimeout(\n                () => {\n                    let alertID = document.getElementById(\"alert-index-\" + dismissIndex);\n                    if( alertID ) {\n                        alertID.className = alertID.className + 'fade-away';\n                    }\n                },\n                (autoDismissSeconds * 1000) - 250\n\n            );\n            window.setTimeout(\n                () => {\n                    let alertID = document.getElementById(\"alert-bar-index-\" + dismissIndex);\n                    if( alertID ) {\n                        alertID.style.width = \"0px\";\n                    }\n                },\n                100\n\n            );\n            this.cancelTimeout = window.setTimeout(\n                () => {\n                    this.activeAlerts.splice(dismissIndex, 1);\n                    if( dismissFunction ) {\n                        dismissFunction();\n                    }\n\n                    this._app.refreshGlobalState();\n                },\n                autoDismissSeconds * 1000\n            );\n        }\n    }\n}\n","export const CONFIGSiteTitle = \"FFG Star Wars/Genesys Helpers\";","import React from 'react';\nimport './About.scss';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class About extends React.Component<IAboutProps, IAboutState> {\n    constructor(props: IAboutProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"About\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"about\" appGlobals={this.props.appGlobals}>\n\n          <p>Genesys and its logo, and Genesys Foundry and its logo, are trademarks of Fantasy Flight Games in the U.S.A. and other countries. All Fantasy Flight Games characters and character names, and the distinctive likenesses thereof, are trademarks of Fantasy Flight Games. <a href=\"http://www.FantasyFlightGames.com\">www.FantasyFlightGames.com</a>.</p>\n\n          <p>All other original material in this work is copyright 2019 by Jeffrey Gordon and published under the GPL. </p>\n\n          <p>Star Wars and its logo are owned by Lucasfilm.</p>\n\n          <hr />\n\n          <p className=\"text-center\">This project is licensed under the GPL and you can contribute to the source at <a href=\"https://github.com/jdgwf/ffg-sw-genesys-helpers\">its GitHub repository.</a></p>\n\n        </UIPage>\n      );\n    }\n}\n\ninterface IAboutProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface IAboutState {\n    updated: boolean;\n\n}","import React from 'react';\nimport {IAppGlobals} from '../AppRouter';\nimport UIPage from '../Components/UIPage';\n\nexport default class Settings extends React.Component<ISettingsProps, ISettingsState> {\n    constructor(props: ISettingsProps) {\n        super(props);\n        this.state = {\n            updated: false,\n        }\n\n        this.setUITheme = this.setUITheme.bind(this);\n    }\n\n    setUITheme( event: React.FormEvent<HTMLSelectElement>) {\n      let settings = this.props.appGlobals.settings;\n      settings.uiTheme = event.currentTarget.value;\n      this.props.appGlobals.saveSettings( settings );\n    }\n\n    componentDidMount ()  {\n      this.props.appGlobals.makeDocumentTitle(\"Settings\");\n    }\n\n    render() {\n      return (\n        <UIPage current=\"settings\" appGlobals={this.props.appGlobals}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <fieldset className=\"fieldset\">\n                  <legend>User Interface</legend>\n                  {/* <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={this.props.appGlobals.settings.uiDesaturated}\n                      onChange={this.toggleDesaturated}\n                    />&nbsp;Desaturated UI\n                  </label> */}\n                  <select\n                      value={this.props.appGlobals.settings.uiTheme}\n                      onChange={this.setUITheme}\n                  >\n                    <option value=\"\">Default</option>\n                    <option value=\"desaturated\">Desaturated</option>\n                    <option value=\"retro\">Retro</option>\n                  </select>\n                </fieldset>\n              </div>\n              {/* <div className=\"col-md-6\">\n                <fieldset className=\"fieldset\">\n                  <legend>Data Syncing </legend>\n                    (TODO: sync settings/logins)\n                  </fieldset>\n              </div> */}\n            </div>\n\n        </UIPage>\n      );\n    }\n}\n\ninterface ISettingsProps {\n  appGlobals: IAppGlobals;\n}\n\ninterface ISettingsState {\n    updated: boolean;\n\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Error404 from \"./Pages/Error404\";\nimport Initiative from \"./Pages/Initiative\";\nimport Alerts from './Classes/Alerts';\nimport { Modal, Button } from 'react-bootstrap';\nimport SanitizedHTML from \"./Components/SanitizedHTML\";\nimport { CONFIGSiteTitle } from \"./config\";\nimport About from \"./Pages/About\";\nimport Settings from \"./Pages/Settings\";\n\n\n\nexport default class AppRouter extends React.Component<IAppRouterProps, IAppRouterState> {\n\n    constructor(props: IAppRouterProps) {\n        super(props);\n\n        this.makeDocumentTitle = this.makeDocumentTitle.bind(this);\n        this.openConfirmDialog = this.openConfirmDialog.bind(this);\n        this.closeConfirmDialog = this.closeConfirmDialog.bind(this);\n        this.confirmConfirmDialog = this.confirmConfirmDialog.bind(this);\n        this.refreshGlobalState = this.refreshGlobalState.bind(this);\n        this.toggleMobile = this.toggleMobile.bind(this);\n        this.closeMobile = this.closeMobile.bind(this);\n        this.saveSettings = this.saveSettings.bind(this);\n\n        let uiTheme: string = \"\";\n        let lsTheme = localStorage.getItem(\"uiTheme\");\n        if( lsTheme ) {\n            uiTheme = lsTheme;\n            document.body.className = uiTheme;\n        } else {\n            document.body.className = '';\n        }\n\n\n        this.state = {\n            updated: false,\n            appGlobals: {\n                settings: {\n                    uiTheme: uiTheme,\n                },\n                currentPageTitle: \"\",\n                siteAlerts: new Alerts( this ),\n                showMobile: false,\n                confirmDialogMessage: \"\",\n                confirmDialogTitle: \"\",\n                confirmDialogYesLabel: \"\",\n                confirmDialogNoLabel: \"\",\n                showConfirmDialog: false,\n                confirmDialogConfirm: null,\n                makeDocumentTitle: this.makeDocumentTitle,\n                openConfirmDialog: this.openConfirmDialog,\n                refreshGlobalState: this.refreshGlobalState,\n                toggleMobile: this.toggleMobile,\n                closeMobile: this.closeMobile,\n\n                saveSettings: this.saveSettings,\n            }\n        }\n\n    }\n\n    saveSettings( settings: ISettings ): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.settings = settings;\n        this.setState({\n            appGlobals: appGlobals,\n        });\n\n        if( settings.uiTheme.trim() ) {\n            document.body.className = settings.uiTheme;\n        } else {\n            document.body.className = '';\n        }\n\n        localStorage.setItem(\"uiTheme\", settings.uiTheme);\n    }\n\n    toggleMobile(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showMobile = !appGlobals.showMobile;\n        this.setState({\n            appGlobals: appGlobals,\n            updated: true,\n        })\n    }\n\n    closeMobile(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showMobile = false;\n        this.setState({\n            appGlobals: appGlobals,\n            updated: true,\n        })\n    }\n\n    makeDocumentTitle( subTitle: string = \"\" ): void {\n        let appGlobals = this.state.appGlobals;\n        if( subTitle ) {\n            document.title = subTitle + \" | \" + CONFIGSiteTitle;\n            appGlobals.currentPageTitle = subTitle;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        } else {\n            document.title = CONFIGSiteTitle;\n            appGlobals.currentPageTitle = subTitle;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        }\n    }\n\n    refreshGlobalState(appGlobals: IAppGlobals | null = null): void {\n        if( !appGlobals ) {\n            this.setState({\n                updated: true,\n            });\n        } else {\n            this.setState({\n                updated: true,\n                appGlobals: appGlobals,\n            });\n        }\n    }\n\n    closeConfirmDialog(): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.showConfirmDialog = false;\n        this.setState({\n            appGlobals: appGlobals,\n        })\n    }\n\n    confirmConfirmDialog(): void {\n        if( this.state.appGlobals ) {\n            if( this.state.appGlobals.confirmDialogConfirm ) {\n                this.state.appGlobals.confirmDialogConfirm();\n            }\n            let appGlobals = this.state.appGlobals;\n            appGlobals.showConfirmDialog = false;\n            this.setState({\n                appGlobals: appGlobals,\n            })\n        }\n    }\n\n    openConfirmDialog(\n        confirmTitle: string,\n        confirmMessage: string,\n        confirmYesLabel: string,\n        confirmNoLabel: string,\n        confirmCallback: Function,\n    ): void {\n        let appGlobals = this.state.appGlobals;\n        appGlobals.confirmDialogMessage = confirmMessage;\n        appGlobals.confirmDialogTitle = confirmTitle;\n        appGlobals.confirmDialogYesLabel = confirmYesLabel;\n        appGlobals.confirmDialogNoLabel = confirmNoLabel;\n        appGlobals.showConfirmDialog = true;\n        appGlobals.confirmDialogConfirm = confirmCallback;\n        this.setState({\n            appGlobals: appGlobals,\n        })\n    }\n\n\n    render() {\n        return (\n            <Router>\n            <Modal show={this.state.appGlobals.showConfirmDialog} onHide={this.closeConfirmDialog}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                            {this.state.appGlobals.confirmDialogTitle}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"form\">\n                        <div>\n                            <SanitizedHTML html={this.state.appGlobals.confirmDialogMessage} />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n\n                    <Button variant=\"secondary\" onClick={this.closeConfirmDialog}>\n                        {this.state.appGlobals.confirmDialogNoLabel}\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.confirmConfirmDialog}>\n                        {this.state.appGlobals.confirmDialogYesLabel}\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n            <Switch>\n                <Route path={`${process.env.PUBLIC_URL}/`} exact>\n                    <Home\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n\n                <Route path={`${process.env.PUBLIC_URL}/initiative`} exact>\n                    <Initiative\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/about`} exact>\n                    <About\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/settings`} exact>\n                    <Settings\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n                <Route>\n                    <Error404\n                        appGlobals={this.state.appGlobals}\n                    />\n                </Route>\n\n            </Switch>\n            </Router>\n        );\n    }\n}\n\ninterface IAppRouterProps {\n\n}\n\ninterface ISettings {\n    uiTheme: string;\n}\n\ninterface IAppRouterState {\n    appGlobals: IAppGlobals;\n    updated: boolean;\n}\n\nexport interface IAppGlobals {\n    currentPageTitle: string;\n    siteAlerts: Alerts;\n    settings: ISettings;\n    showMobile: boolean;\n    confirmDialogMessage: string;\n    confirmDialogTitle: string;\n    confirmDialogYesLabel: string;\n    confirmDialogNoLabel: string;\n    showConfirmDialog: boolean;\n    confirmDialogConfirm: Function | null;\n    refreshGlobalState(appGlobals: IAppGlobals | null): void;\n\n    makeDocumentTitle( subTitle: string ): void;\n\n    toggleMobile(): void;\n    closeMobile(): void;\n\n    openConfirmDialog(\n        confirmTitle: string,\n        confirmMessage: string,\n        confirmYesLabel: string,\n        confirmNoLabel: string,\n        confirmCallback: Function,\n    ): void;\n\n    saveSettings( settings: ISettings ): void;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './AppRouter';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your Home to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}